
TouchWallSwitch.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803e00  00803e00  00001751  2**0
                  ALLOC, LOAD, DATA
  1 .text         00000096  00000000  00000000  000000f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002e  00803e00  00803e00  00001751  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  00001751  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000002c8  00000000  00000000  00001780  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00007772  00000000  00000000  00001a48  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002220  00000000  00000000  000091ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000149f  00000000  00000000  0000b3da  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000004b0  00000000  00000000  0000c87c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000bf3  00000000  00000000  0000cd2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000009ff  00000000  00000000  0000d91f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001d8  00000000  00000000  0000e31e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000002  0000160e  0000160e  00001702  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000e4f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.atmel_start_init 00000006  000015ee  000015ee  000016e2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.__vector_6 0000004c  0000122a  0000122a  0000131e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.touch_status_display 00000068  00001044  00001044  00001138  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.touch_example 00000014  0000153c  0000153c  00001630  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .bss.key_status 00000001  00803e83  00803e83  00001751  2**0
                  ALLOC
 19 .text.main    00000006  000015f4  000015f4  000016e8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.datastreamer_init 00000002  00001610  00001610  00001704  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.datastreamer_transmit 00000018  000014de  000014de  000015d2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.datastreamer_output 000000ec  00000cba  00000cba  00000dae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .bss.sequence.3892 00000001  00803e84  00803e84  00001751  2**0
                  ALLOC
 24 .data.data    00000013  00803e2e  00001612  00001706  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 25 .text.touch_ptc_pin_config 00000038  00001380  00001380  00001474  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.qtm_measure_complete_callback 00000008  000015de  000015de  000016d2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.touch_sensors_config 0000005e  00001174  00001174  00001268  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.qtm_error_callback 0000000a  000015d4  000015d4  000016c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.Timer_set_period 00000014  00001550  00001550  00001644  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.touch_init 0000000c  000015bc  000015bc  000016b0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.touch_process 00000060  00001114  00001114  00001208  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.touch_timer_handler 00000020  0000144c  0000144c  00001540  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.get_sensor_node_signal 0000001a  000014aa  000014aa  0000159e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.get_sensor_node_reference 00000018  000014f6  000014f6  000015ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.get_sensor_cc_val 0000001a  000014c4  000014c4  000015b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.get_sensor_state 0000001e  0000148c  0000148c  00001580  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.__vector_17 00000046  00001276  00001276  0000136a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .data.qtlib_key_set1 00000008  00803e66  0000164a  0000173e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 39 .data.qtlib_key_configs_set1 00000009  00803e5d  00001641  00001735  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 40 .data.qtlib_key_grp_config_set1 0000000a  00803e53  00001637  0000172b  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 41 .data.qtlib_acq_set1 00000006  00803e6e  00001652  00001746  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 42 .data.ptc_seq_node_cfg1 00000012  00803e41  00001625  00001719  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 43 .data.ptc_qtlib_acq_gen1 00000005  00803e74  00001658  0000174c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 44 .bss.module_error_code 00000001  00803e85  00803e85  00001751  2**0
                  ALLOC
 45 .bss.measurement_done_touch 00000001  00803e86  00803e86  00001751  2**0
                  ALLOC
 46 .bss.touch_postprocess_request 00000001  00803e87  00803e87  00001751  2**0
                  ALLOC
 47 .bss.time_to_measure_touch_flag 00000001  00803e88  00803e88  00001751  2**0
                  ALLOC
 48 .text.BOD_init 00000004  00001606  00001606  000016fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.CLKCTRL_init 0000000e  000015a0  000015a0  00001694  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.CPUINT_init 00000006  000015fa  000015fa  000016ee  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.mcu_init 00000032  000013b8  000013b8  000014ac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.USART_initialization 00000020  0000146c  0000146c  00001560  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.system_init 00000044  000012bc  000012bc  000013b0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.protected_write_io 00000008  000015e6  000015e6  000016da  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.Timer_init 00000018  0000150e  0000150e  00001602  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.SLPCTRL_init 00000004  0000160a  0000160a  000016fe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .text.USART_init 00000014  00001564  00001564  00001658  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 .text.USART_is_tx_ready 0000000c  000015c8  000015c8  000016bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .text.USART_is_tx_busy 00000014  00001578  00001578  0000166c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.USART_write 0000000e  000015ae  000015ae  000016a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text.qtm_measure_node 0000010a  00000bb0  00000bb0  00000ca4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text.select_next_channel_to_measure 00000068  000010ac  000010ac  000011a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .text.check_for_aks_block 000000da  00000da6  00000da6  00000e9a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .text.qtm_t81x_ptc_handler_eoc 00000058  000011d2  000011d2  000012c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 .text.qtm_calibrate_sensor_node 00000088  00000f4c  00000f4c  00001040  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 .text.qtm_enable_sensor_node 00000042  00001300  00001300  000013f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 .text.qtm_ptc_start_measurement_seq 000000cc  00000e80  00000e80  00000f74  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 .text.qtm_ptc_qtlib_assign_signal_memory 00000014  0000158c  0000158c  00001680  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 .text.qtm_ptc_init_acquisition_module 00000070  00000fd4  00000fd4  000010c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 .text.qtm_acquisition_process 000002f6  000008ba  000008ba  000009ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 .text.qtm_key_sensors_process 00000824  00000096  00000096  0000018a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 .text.qtm_init_sensor_key 0000003e  00001342  00001342  00001436  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 .text.qtm_update_qtlib_timer 00000016  00001526  00001526  0000161a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 .bss.qtm_local_ms_timecount 00000002  00803e79  00803e79  00001751  2**0
                  ALLOC
 75 .rodata.gain_setting_int_cap 00000006  00809600  00001600  000016f4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 76 .bss.qtm_acquisition_control_working_set_ptr 00000002  00803e7b  00803e7b  00001751  2**0
                  ALLOC
 77 .bss.ptc_seq_measure_complete_pointer 00000002  00803e7d  00803e7d  00001751  2**0
                  ALLOC
 78 .bss.touch_seq_lib_state 00000001  00803e89  00803e89  00001751  2**0
                  ALLOC
 79 .bss.current_measure_channel 00000002  00803e7f  00803e7f  00001751  2**0
                  ALLOC
 80 .bss.qtm_raw_data_measurements_ptr 00000002  00803e81  00803e81  00001751  2**0
                  ALLOC
 81 .text.libgcc.prologue 00000032  000013ea  000013ea  000014de  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 .text.libgcc.prologue 00000030  0000141c  0000141c  00001510  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	22 c0       	rjmp	.+68     	; 0x46 <__ctors_end>
   2:	05 cb       	rjmp	.-2550   	; 0xfffff60e <__eeprom_end+0xff7ef60e>
   4:	04 cb       	rjmp	.-2552   	; 0xfffff60e <__eeprom_end+0xff7ef60e>
   6:	03 cb       	rjmp	.-2554   	; 0xfffff60e <__eeprom_end+0xff7ef60e>
   8:	02 cb       	rjmp	.-2556   	; 0xfffff60e <__eeprom_end+0xff7ef60e>
   a:	01 cb       	rjmp	.-2558   	; 0xfffff60e <__eeprom_end+0xff7ef60e>
   c:	0e c9       	rjmp	.-3556   	; 0xfffff22a <__eeprom_end+0xff7ef22a>
   e:	ff ca       	rjmp	.-2562   	; 0xfffff60e <__eeprom_end+0xff7ef60e>
  10:	fe ca       	rjmp	.-2564   	; 0xfffff60e <__eeprom_end+0xff7ef60e>
  12:	fd ca       	rjmp	.-2566   	; 0xfffff60e <__eeprom_end+0xff7ef60e>
  14:	fc ca       	rjmp	.-2568   	; 0xfffff60e <__eeprom_end+0xff7ef60e>
  16:	fb ca       	rjmp	.-2570   	; 0xfffff60e <__eeprom_end+0xff7ef60e>
  18:	fa ca       	rjmp	.-2572   	; 0xfffff60e <__eeprom_end+0xff7ef60e>
  1a:	f9 ca       	rjmp	.-2574   	; 0xfffff60e <__eeprom_end+0xff7ef60e>
  1c:	f8 ca       	rjmp	.-2576   	; 0xfffff60e <__eeprom_end+0xff7ef60e>
  1e:	f7 ca       	rjmp	.-2578   	; 0xfffff60e <__eeprom_end+0xff7ef60e>
  20:	f6 ca       	rjmp	.-2580   	; 0xfffff60e <__eeprom_end+0xff7ef60e>
  22:	29 c9       	rjmp	.-3502   	; 0xfffff276 <__eeprom_end+0xff7ef276>
  24:	f4 ca       	rjmp	.-2584   	; 0xfffff60e <__eeprom_end+0xff7ef60e>
  26:	f3 ca       	rjmp	.-2586   	; 0xfffff60e <__eeprom_end+0xff7ef60e>
  28:	f2 ca       	rjmp	.-2588   	; 0xfffff60e <__eeprom_end+0xff7ef60e>
  2a:	f1 ca       	rjmp	.-2590   	; 0xfffff60e <__eeprom_end+0xff7ef60e>
  2c:	f0 ca       	rjmp	.-2592   	; 0xfffff60e <__eeprom_end+0xff7ef60e>
  2e:	ef ca       	rjmp	.-2594   	; 0xfffff60e <__eeprom_end+0xff7ef60e>
  30:	ee ca       	rjmp	.-2596   	; 0xfffff60e <__eeprom_end+0xff7ef60e>
  32:	ed ca       	rjmp	.-2598   	; 0xfffff60e <__eeprom_end+0xff7ef60e>

00000034 <.dinit>:
  34:	3e 00       	.word	0x003e	; ????
  36:	3e 2e       	mov	r3, r30
  38:	80 3e       	cpi	r24, 0xE0	; 224
  3a:	2e 3e       	cpi	r18, 0xEE	; 238
  3c:	79 00       	.word	0x0079	; ????
  3e:	16 12       	cpse	r1, r22
  40:	3e 79       	andi	r19, 0x9E	; 158
  42:	3e 8a       	std	Y+22, r3	; 0x16
  44:	80 00       	.word	0x0080	; ????

00000046 <__ctors_end>:
  46:	11 24       	eor	r1, r1
  48:	1f be       	out	0x3f, r1	; 63
  4a:	cf ef       	ldi	r28, 0xFF	; 255
  4c:	cd bf       	out	0x3d, r28	; 61
  4e:	df e3       	ldi	r29, 0x3F	; 63
  50:	de bf       	out	0x3e, r29	; 62

00000052 <__do_copy_data>:
  52:	e4 e3       	ldi	r30, 0x34	; 52
  54:	f0 e0       	ldi	r31, 0x00	; 0
  56:	40 e0       	ldi	r20, 0x00	; 0
  58:	17 c0       	rjmp	.+46     	; 0x88 <__do_clear_bss+0x8>
  5a:	b5 91       	lpm	r27, Z+
  5c:	a5 91       	lpm	r26, Z+
  5e:	35 91       	lpm	r19, Z+
  60:	25 91       	lpm	r18, Z+
  62:	05 91       	lpm	r16, Z+
  64:	07 fd       	sbrc	r16, 7
  66:	0c c0       	rjmp	.+24     	; 0x80 <__do_clear_bss>
  68:	95 91       	lpm	r25, Z+
  6a:	85 91       	lpm	r24, Z+
  6c:	ef 01       	movw	r28, r30
  6e:	f9 2f       	mov	r31, r25
  70:	e8 2f       	mov	r30, r24
  72:	05 90       	lpm	r0, Z+
  74:	0d 92       	st	X+, r0
  76:	a2 17       	cp	r26, r18
  78:	b3 07       	cpc	r27, r19
  7a:	d9 f7       	brne	.-10     	; 0x72 <__do_copy_data+0x20>
  7c:	fe 01       	movw	r30, r28
  7e:	04 c0       	rjmp	.+8      	; 0x88 <__do_clear_bss+0x8>

00000080 <__do_clear_bss>:
  80:	1d 92       	st	X+, r1
  82:	a2 17       	cp	r26, r18
  84:	b3 07       	cpc	r27, r19
  86:	e1 f7       	brne	.-8      	; 0x80 <__do_clear_bss>
  88:	e5 34       	cpi	r30, 0x45	; 69
  8a:	f4 07       	cpc	r31, r20
  8c:	31 f7       	brne	.-52     	; 0x5a <__do_copy_data+0x8>
  8e:	b2 da       	rcall	.-2716   	; 0xfffff5f4 <__eeprom_end+0xff7ef5f4>
  90:	00 c0       	rjmp	.+0      	; 0x92 <_exit>

00000092 <_exit>:
  92:	f8 94       	cli

00000094 <__stop_program>:
  94:	ff cf       	rjmp	.-2      	; 0x94 <__stop_program>

Disassembly of section .text:

0000160e <__bad_interrupt>:
    160e:	f8 c4       	rjmp	.+2544   	; 0x2000 <__TEXT_REGION_LENGTH__>

Disassembly of section .text.atmel_start_init:

000015ee <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
    15ee:	66 de       	rcall	.-820    	; 0x12bc <system_init>

	touch_init();
    15f0:	e5 df       	rcall	.-54     	; 0x15bc <touch_init>
    15f2:	08 95       	ret

Disassembly of section .text.__vector_6:

0000122a <__vector_6>:

#include <driver_init.h>
#include <compiler.h>

ISR(RTC_CNT_vect)
{
    122a:	1f 92       	push	r1
    122c:	0f 92       	push	r0
    122e:	0f b6       	in	r0, 0x3f	; 63
    1230:	0f 92       	push	r0
    1232:	11 24       	eor	r1, r1
    1234:	2f 93       	push	r18
    1236:	3f 93       	push	r19
    1238:	4f 93       	push	r20
    123a:	5f 93       	push	r21
    123c:	6f 93       	push	r22
    123e:	7f 93       	push	r23
    1240:	8f 93       	push	r24
    1242:	9f 93       	push	r25
    1244:	af 93       	push	r26
    1246:	bf 93       	push	r27
    1248:	ef 93       	push	r30
    124a:	ff 93       	push	r31

	/* Insert your RTC Compare interrupt handling code */
	touch_timer_handler();
    124c:	ff d0       	rcall	.+510    	; 0x144c <touch_timer_handler>

	/* Compare interrupt flag has to be cleared manually */
	RTC.INTFLAGS = RTC_CMP_bm;
    124e:	82 e0       	ldi	r24, 0x02	; 2
    1250:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <__RODATA_PM_OFFSET__+0x7f8143>
}
    1254:	ff 91       	pop	r31
    1256:	ef 91       	pop	r30
    1258:	bf 91       	pop	r27
    125a:	af 91       	pop	r26
    125c:	9f 91       	pop	r25
    125e:	8f 91       	pop	r24
    1260:	7f 91       	pop	r23
    1262:	6f 91       	pop	r22
    1264:	5f 91       	pop	r21
    1266:	4f 91       	pop	r20
    1268:	3f 91       	pop	r19
    126a:	2f 91       	pop	r18
    126c:	0f 90       	pop	r0
    126e:	0f be       	out	0x3f, r0	; 63
    1270:	0f 90       	pop	r0
    1272:	1f 90       	pop	r1
    1274:	18 95       	reti

Disassembly of section .text.touch_status_display:

00001044 <touch_status_display>:
void touch_status_display(void)
{
	char teste = 0;
	static bool cn0, cn1, cn2, flag0, flag1, flag2 = 0; 
	
	key_status = get_sensor_state(0) & KEY_TOUCHED_MASK;
    1044:	80 e0       	ldi	r24, 0x00	; 0
    1046:	90 e0       	ldi	r25, 0x00	; 0
    1048:	21 d2       	rcall	.+1090   	; 0x148c <get_sensor_state>
    104a:	80 78       	andi	r24, 0x80	; 128
    104c:	80 93 83 3e 	sts	0x3E83, r24	; 0x803e83 <key_status>
	if (0u != key_status /*&& !flag0*/) {
    1050:	88 23       	and	r24, r24
    1052:	21 f0       	breq	.+8      	; 0x105c <touch_status_display+0x18>
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
	} else {
		VPORTA.OUT &= ~(1 << pin);
    1054:	81 b1       	in	r24, 0x01	; 1
    1056:	8d 7f       	andi	r24, 0xFD	; 253
    1058:	81 b9       	out	0x01, r24	; 1
    105a:	05 c0       	rjmp	.+10     	; 0x1066 <touch_status_display+0x22>
		cn0 = !cn0;
		flag0 = 1;
		Relay1_set_level(cn0);
		*/
		Relay1_set_level(0);
	} else if(0u == key_status){
    105c:	81 11       	cpse	r24, r1
    105e:	03 c0       	rjmp	.+6      	; 0x1066 <touch_status_display+0x22>
 *                  false = Pin level set to "low" state
 */
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
    1060:	81 b1       	in	r24, 0x01	; 1
    1062:	82 60       	ori	r24, 0x02	; 2
    1064:	81 b9       	out	0x01, r24	; 1
		Relay1_set_level(1);
		//flag0 = 0;
	}
	
		key_status = get_sensor_state(1) & KEY_TOUCHED_MASK;
    1066:	81 e0       	ldi	r24, 0x01	; 1
    1068:	90 e0       	ldi	r25, 0x00	; 0
    106a:	10 d2       	rcall	.+1056   	; 0x148c <get_sensor_state>
    106c:	80 78       	andi	r24, 0x80	; 128
    106e:	80 93 83 3e 	sts	0x3E83, r24	; 0x803e83 <key_status>
	if (0u != key_status /*&& !flag1*/) {
    1072:	88 23       	and	r24, r24
    1074:	21 f0       	breq	.+8      	; 0x107e <touch_status_display+0x3a>
	} else {
		VPORTA.OUT &= ~(1 << pin);
    1076:	81 b1       	in	r24, 0x01	; 1
    1078:	8b 7f       	andi	r24, 0xFB	; 251
    107a:	81 b9       	out	0x01, r24	; 1
    107c:	05 c0       	rjmp	.+10     	; 0x1088 <touch_status_display+0x44>
		cn1 = !cn1;
		flag1 = 1;
		Relay2_set_level(cn1);
		*/
		Relay2_set_level(0);
	} else if(0u == key_status){
    107e:	81 11       	cpse	r24, r1
    1080:	03 c0       	rjmp	.+6      	; 0x1088 <touch_status_display+0x44>
 *                  false = Pin level set to "low" state
 */
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
    1082:	81 b1       	in	r24, 0x01	; 1
    1084:	84 60       	ori	r24, 0x04	; 4
    1086:	81 b9       	out	0x01, r24	; 1
		//flag1 = 0;
		Relay2_set_level(1);
	}
	
		key_status = get_sensor_state(2) & KEY_TOUCHED_MASK;
    1088:	82 e0       	ldi	r24, 0x02	; 2
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	ff d1       	rcall	.+1022   	; 0x148c <get_sensor_state>
    108e:	80 78       	andi	r24, 0x80	; 128
    1090:	80 93 83 3e 	sts	0x3E83, r24	; 0x803e83 <key_status>
	if (0u != key_status/* && !flag2*/) {
    1094:	88 23       	and	r24, r24
    1096:	21 f0       	breq	.+8      	; 0x10a0 <touch_status_display+0x5c>
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    1098:	85 b1       	in	r24, 0x05	; 5
    109a:	8e 7f       	andi	r24, 0xFE	; 254
    109c:	85 b9       	out	0x05, r24	; 5
    109e:	08 95       	ret
		cn2 = !cn2;
		flag2 = 1;
		Relay3_set_level(cn2);
		*/
		Relay3_set_level(0);
	} else if(0u == key_status){
    10a0:	81 11       	cpse	r24, r1
    10a2:	03 c0       	rjmp	.+6      	; 0x10aa <touch_status_display+0x66>
 *                  false = Pin level set to "low" state
 */
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
    10a4:	85 b1       	in	r24, 0x05	; 5
    10a6:	81 60       	ori	r24, 0x01	; 1
    10a8:	85 b9       	out	0x05, r24	; 5
    10aa:	08 95       	ret

Disassembly of section .text.touch_example:

0000153c <touch_example>:
	 *
	 * Note: This is a sample file to provide reference on using touch status in a user application. This file is not
	 * linked to a project build.
	 */

	cpu_irq_enable(); /* Global Interrupt Enable */
    153c:	78 94       	sei

	touch_process();
    153e:	ea dd       	rcall	.-1068   	; 0x1114 <touch_process>
	if (measurement_done_touch == 1) {
    1540:	80 91 86 3e 	lds	r24, 0x3E86	; 0x803e86 <measurement_done_touch>
    1544:	81 30       	cpi	r24, 0x01	; 1
    1546:	19 f4       	brne	.+6      	; 0x154e <touch_example+0x12>
		measurement_done_touch = 0;
    1548:	10 92 86 3e 	sts	0x3E86, r1	; 0x803e86 <measurement_done_touch>
		touch_status_display();
    154c:	7b dd       	rcall	.-1290   	; 0x1044 <touch_status_display>
    154e:	08 95       	ret

Disassembly of section .text.main:

000015f4 <main>:
#include <atmel_start.h>

int main(void)
{
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
    15f4:	fc df       	rcall	.-8      	; 0x15ee <atmel_start_init>
	

	/* Replace with your application code */
	while (1) {
		touch_example();
    15f6:	a2 df       	rcall	.-188    	; 0x153c <touch_example>
    15f8:	fe cf       	rjmp	.-4      	; 0x15f6 <main+0x2>

Disassembly of section .text.datastreamer_init:

00001610 <datastreamer_init>:
Input  : none
Output : none
Notes  :
============================================================================*/
void datastreamer_init(void)
{
    1610:	08 95       	ret

Disassembly of section .text.datastreamer_transmit:

000014de <datastreamer_transmit>:
Input  : Byte to be transmitted
Output : none
Notes  :
============================================================================*/
void datastreamer_transmit(uint8_t data_byte)
{
    14de:	cf 93       	push	r28
    14e0:	c8 2f       	mov	r28, r24
	while (!USART_is_tx_ready())
    14e2:	72 d0       	rcall	.+228    	; 0x15c8 <USART_is_tx_ready>
    14e4:	88 23       	and	r24, r24
    14e6:	e9 f3       	breq	.-6      	; 0x14e2 <datastreamer_transmit+0x4>
		;

	USART_write(data_byte);
    14e8:	8c 2f       	mov	r24, r28
    14ea:	61 d0       	rcall	.+194    	; 0x15ae <USART_write>

	while (USART_is_tx_busy())
    14ec:	45 d0       	rcall	.+138    	; 0x1578 <USART_is_tx_busy>
    14ee:	81 11       	cpse	r24, r1
    14f0:	fd cf       	rjmp	.-6      	; 0x14ec <datastreamer_transmit+0xe>
		;
}
    14f2:	cf 91       	pop	r28
    14f4:	08 95       	ret

Disassembly of section .text.datastreamer_output:

00000cba <datastreamer_output>:
Output : none
Notes  : The data visualizer scripts that are generated in the project should be
         set on the data visualizer software.
============================================================================*/
void datastreamer_output(void)
{
 cba:	0f 93       	push	r16
 cbc:	1f 93       	push	r17
 cbe:	cf 93       	push	r28
 cc0:	df 93       	push	r29
 cc2:	00 d0       	rcall	.+0      	; 0xcc4 <datastreamer_output+0xa>
 cc4:	cd b7       	in	r28, 0x3d	; 61
 cc6:	de b7       	in	r29, 0x3e	; 62
	static uint8_t    sequence = 0u;
	uint16_t          u16temp_output;
	uint8_t           u8temp_output, send_header;
	volatile uint16_t count_bytes_out;

	send_header = sequence & (0x0f);
 cc8:	80 91 84 3e 	lds	r24, 0x3E84	; 0x803e84 <sequence.3892>
 ccc:	8f 70       	andi	r24, 0x0F	; 15
	if (send_header == 0) {
 cce:	49 f0       	breq	.+18     	; 0xce2 <datastreamer_output+0x28>
 cd0:	0d c0       	rjmp	.+26     	; 0xcec <datastreamer_output+0x32>
		for (i = 0; i < sizeof(data); i++) {
			datastreamer_transmit(data[i]);
 cd2:	f8 01       	movw	r30, r16
 cd4:	e2 5d       	subi	r30, 0xD2	; 210
 cd6:	f1 4c       	sbci	r31, 0xC1	; 193
 cd8:	80 81       	ld	r24, Z
 cda:	01 d4       	rcall	.+2050   	; 0x14de <datastreamer_transmit>
	uint8_t           u8temp_output, send_header;
	volatile uint16_t count_bytes_out;

	send_header = sequence & (0x0f);
	if (send_header == 0) {
		for (i = 0; i < sizeof(data); i++) {
 cdc:	0f 5f       	subi	r16, 0xFF	; 255
 cde:	1f 4f       	sbci	r17, 0xFF	; 255
 ce0:	02 c0       	rjmp	.+4      	; 0xce6 <datastreamer_output+0x2c>
 ce2:	00 e0       	ldi	r16, 0x00	; 0
 ce4:	10 e0       	ldi	r17, 0x00	; 0
 ce6:	03 31       	cpi	r16, 0x13	; 19
 ce8:	11 05       	cpc	r17, r1
 cea:	98 f3       	brcs	.-26     	; 0xcd2 <datastreamer_output+0x18>
			datastreamer_transmit(data[i]);
		}
	}

	// Start token
	datastreamer_transmit(0x55);
 cec:	85 e5       	ldi	r24, 0x55	; 85
 cee:	f7 d3       	rcall	.+2030   	; 0x14de <datastreamer_transmit>

	// Frame Start
	datastreamer_transmit(sequence);
 cf0:	80 91 84 3e 	lds	r24, 0x3E84	; 0x803e84 <sequence.3892>
 cf4:	f4 d3       	rcall	.+2024   	; 0x14de <datastreamer_transmit>
	for (count_bytes_out = 0u; count_bytes_out < DEF_NUM_CHANNELS; count_bytes_out++) {
 cf6:	19 82       	std	Y+1, r1	; 0x01
 cf8:	1a 82       	std	Y+2, r1	; 0x02
 cfa:	3d c0       	rjmp	.+122    	; 0xd76 <datastreamer_output+0xbc>

		/* Signals */
		u16temp_output = get_sensor_node_signal(count_bytes_out);
 cfc:	89 81       	ldd	r24, Y+1	; 0x01
 cfe:	9a 81       	ldd	r25, Y+2	; 0x02
 d00:	d4 d3       	rcall	.+1960   	; 0x14aa <get_sensor_node_signal>
 d02:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
 d04:	ec d3       	rcall	.+2008   	; 0x14de <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
 d06:	81 2f       	mov	r24, r17
 d08:	ea d3       	rcall	.+2004   	; 0x14de <datastreamer_transmit>

		/* Reference */
		u16temp_output = get_sensor_node_reference(count_bytes_out);
 d0a:	89 81       	ldd	r24, Y+1	; 0x01
 d0c:	9a 81       	ldd	r25, Y+2	; 0x02
 d0e:	f3 d3       	rcall	.+2022   	; 0x14f6 <get_sensor_node_reference>
 d10:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
 d12:	e5 d3       	rcall	.+1994   	; 0x14de <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
 d14:	81 2f       	mov	r24, r17
 d16:	e3 d3       	rcall	.+1990   	; 0x14de <datastreamer_transmit>

		/* Touch delta */
		temp_int_calc = get_sensor_node_signal(count_bytes_out);
 d18:	89 81       	ldd	r24, Y+1	; 0x01
 d1a:	9a 81       	ldd	r25, Y+2	; 0x02
 d1c:	c6 d3       	rcall	.+1932   	; 0x14aa <get_sensor_node_signal>
 d1e:	8c 01       	movw	r16, r24
		temp_int_calc -= get_sensor_node_reference(count_bytes_out);
 d20:	89 81       	ldd	r24, Y+1	; 0x01
 d22:	9a 81       	ldd	r25, Y+2	; 0x02
 d24:	e8 d3       	rcall	.+2000   	; 0x14f6 <get_sensor_node_reference>
 d26:	08 1b       	sub	r16, r24
 d28:	19 0b       	sbc	r17, r25
		u16temp_output = (uint16_t)(temp_int_calc);
		datastreamer_transmit((uint8_t)u16temp_output);
 d2a:	80 2f       	mov	r24, r16
 d2c:	d8 d3       	rcall	.+1968   	; 0x14de <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
 d2e:	81 2f       	mov	r24, r17
 d30:	d6 d3       	rcall	.+1964   	; 0x14de <datastreamer_transmit>

		/* Comp Caps */
		u16temp_output = get_sensor_cc_val(count_bytes_out);
 d32:	89 81       	ldd	r24, Y+1	; 0x01
 d34:	9a 81       	ldd	r25, Y+2	; 0x02
 d36:	c6 d3       	rcall	.+1932   	; 0x14c4 <get_sensor_cc_val>
 d38:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
 d3a:	d1 d3       	rcall	.+1954   	; 0x14de <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
 d3c:	81 2f       	mov	r24, r17
 d3e:	cf d3       	rcall	.+1950   	; 0x14de <datastreamer_transmit>

		/* State */
		u8temp_output = get_sensor_state(count_bytes_out);
 d40:	89 81       	ldd	r24, Y+1	; 0x01
 d42:	9a 81       	ldd	r25, Y+2	; 0x02
 d44:	a3 d3       	rcall	.+1862   	; 0x148c <get_sensor_state>
		if (0u != (u8temp_output & 0x80)) {
 d46:	88 23       	and	r24, r24
 d48:	1c f4       	brge	.+6      	; 0xd50 <datastreamer_output+0x96>
			datastreamer_transmit(0x01);
 d4a:	81 e0       	ldi	r24, 0x01	; 1
 d4c:	c8 d3       	rcall	.+1936   	; 0x14de <datastreamer_transmit>
 d4e:	02 c0       	rjmp	.+4      	; 0xd54 <datastreamer_output+0x9a>
		} else {
			datastreamer_transmit(0x00);
 d50:	80 e0       	ldi	r24, 0x00	; 0
 d52:	c5 d3       	rcall	.+1930   	; 0x14de <datastreamer_transmit>
		}

		/* Threshold */
		datastreamer_transmit(qtlib_key_configs_set1[count_bytes_out].channel_threshold);
 d54:	89 81       	ldd	r24, Y+1	; 0x01
 d56:	9a 81       	ldd	r25, Y+2	; 0x02
 d58:	fc 01       	movw	r30, r24
 d5a:	ee 0f       	add	r30, r30
 d5c:	ff 1f       	adc	r31, r31
 d5e:	8e 0f       	add	r24, r30
 d60:	9f 1f       	adc	r25, r31
 d62:	fc 01       	movw	r30, r24
 d64:	e3 5a       	subi	r30, 0xA3	; 163
 d66:	f1 4c       	sbci	r31, 0xC1	; 193
 d68:	80 81       	ld	r24, Z
 d6a:	b9 d3       	rcall	.+1906   	; 0x14de <datastreamer_transmit>
	// Start token
	datastreamer_transmit(0x55);

	// Frame Start
	datastreamer_transmit(sequence);
	for (count_bytes_out = 0u; count_bytes_out < DEF_NUM_CHANNELS; count_bytes_out++) {
 d6c:	89 81       	ldd	r24, Y+1	; 0x01
 d6e:	9a 81       	ldd	r25, Y+2	; 0x02
 d70:	01 96       	adiw	r24, 0x01	; 1
 d72:	89 83       	std	Y+1, r24	; 0x01
 d74:	9a 83       	std	Y+2, r25	; 0x02
 d76:	89 81       	ldd	r24, Y+1	; 0x01
 d78:	9a 81       	ldd	r25, Y+2	; 0x02
 d7a:	03 97       	sbiw	r24, 0x03	; 3
 d7c:	08 f4       	brcc	.+2      	; 0xd80 <datastreamer_output+0xc6>
 d7e:	be cf       	rjmp	.-132    	; 0xcfc <datastreamer_output+0x42>
		/* Threshold */
		datastreamer_transmit(qtlib_key_configs_set1[count_bytes_out].channel_threshold);
	}

	/* Other Debug Parameters */
	datastreamer_transmit(module_error_code);
 d80:	80 91 85 3e 	lds	r24, 0x3E85	; 0x803e85 <module_error_code>
 d84:	ac d3       	rcall	.+1880   	; 0x14de <datastreamer_transmit>

	/* Frame End */
	datastreamer_transmit(sequence++);
 d86:	80 91 84 3e 	lds	r24, 0x3E84	; 0x803e84 <sequence.3892>
 d8a:	91 e0       	ldi	r25, 0x01	; 1
 d8c:	98 0f       	add	r25, r24
 d8e:	90 93 84 3e 	sts	0x3E84, r25	; 0x803e84 <sequence.3892>
 d92:	a5 d3       	rcall	.+1866   	; 0x14de <datastreamer_transmit>

	/* End token */
	datastreamer_transmit(~0x55);
 d94:	8a ea       	ldi	r24, 0xAA	; 170
 d96:	a3 d3       	rcall	.+1862   	; 0x14de <datastreamer_transmit>
}
 d98:	0f 90       	pop	r0
 d9a:	0f 90       	pop	r0
 d9c:	df 91       	pop	r29
 d9e:	cf 91       	pop	r28
 da0:	1f 91       	pop	r17
 da2:	0f 91       	pop	r16
 da4:	08 95       	ret

Disassembly of section .text.touch_ptc_pin_config:

00001380 <touch_ptc_pin_config>:
	return (ptc_qtlib_node_stat1[sensor_node].node_acq_signals);
}

void update_sensor_node_signal(uint16_t sensor_node, uint16_t new_signal)
{
	ptc_qtlib_node_stat1[sensor_node].node_acq_signals = new_signal;
    1380:	e5 e1       	ldi	r30, 0x15	; 21
    1382:	f4 e0       	ldi	r31, 0x04	; 4
    1384:	80 81       	ld	r24, Z
    1386:	87 7f       	andi	r24, 0xF7	; 247
    1388:	80 83       	st	Z, r24
    138a:	80 81       	ld	r24, Z
    138c:	88 7f       	andi	r24, 0xF8	; 248
    138e:	84 60       	ori	r24, 0x04	; 4
    1390:	80 83       	st	Z, r24
    1392:	e4 e1       	ldi	r30, 0x14	; 20
    1394:	f4 e0       	ldi	r31, 0x04	; 4
    1396:	80 81       	ld	r24, Z
    1398:	87 7f       	andi	r24, 0xF7	; 247
    139a:	80 83       	st	Z, r24
    139c:	80 81       	ld	r24, Z
    139e:	88 7f       	andi	r24, 0xF8	; 248
    13a0:	84 60       	ori	r24, 0x04	; 4
    13a2:	80 83       	st	Z, r24
    13a4:	e6 e1       	ldi	r30, 0x16	; 22
    13a6:	f4 e0       	ldi	r31, 0x04	; 4
    13a8:	80 81       	ld	r24, Z
    13aa:	87 7f       	andi	r24, 0xF7	; 247
    13ac:	80 83       	st	Z, r24
    13ae:	80 81       	ld	r24, Z
    13b0:	88 7f       	andi	r24, 0xF8	; 248
    13b2:	84 60       	ori	r24, 0x04	; 4
    13b4:	80 83       	st	Z, r24
    13b6:	08 95       	ret

Disassembly of section .text.qtm_measure_complete_callback:

000015de <qtm_measure_complete_callback>:
Output : none
Notes  :
============================================================================*/
static void qtm_measure_complete_callback(void)
{
	touch_postprocess_request = 1u;
    15de:	81 e0       	ldi	r24, 0x01	; 1
    15e0:	80 93 87 3e 	sts	0x3E87, r24	; 0x803e87 <touch_postprocess_request>
    15e4:	08 95       	ret

Disassembly of section .text.touch_sensors_config:

00001174 <touch_sensors_config>:
	return (ptc_qtlib_node_stat1[sensor_node].node_acq_signals);
}

void update_sensor_node_signal(uint16_t sensor_node, uint16_t new_signal)
{
	ptc_qtlib_node_stat1[sensor_node].node_acq_signals = new_signal;
    1174:	cf 93       	push	r28
    1176:	df 93       	push	r29
    1178:	8e e6       	ldi	r24, 0x6E	; 110
    117a:	9e e3       	ldi	r25, 0x3E	; 62
    117c:	2b df       	rcall	.-426    	; 0xfd4 <qtm_ptc_init_acquisition_module>
    117e:	86 e1       	ldi	r24, 0x16	; 22
    1180:	9e e3       	ldi	r25, 0x3E	; 62
    1182:	04 d2       	rcall	.+1032   	; 0x158c <qtm_ptc_qtlib_assign_signal_memory>
    1184:	c0 e0       	ldi	r28, 0x00	; 0
    1186:	d0 e0       	ldi	r29, 0x00	; 0
    1188:	09 c0       	rjmp	.+18     	; 0x119c <touch_sensors_config+0x28>
    118a:	be 01       	movw	r22, r28
    118c:	8e e6       	ldi	r24, 0x6E	; 110
    118e:	9e e3       	ldi	r25, 0x3E	; 62
    1190:	b7 d0       	rcall	.+366    	; 0x1300 <qtm_enable_sensor_node>
    1192:	be 01       	movw	r22, r28
    1194:	8e e6       	ldi	r24, 0x6E	; 110
    1196:	9e e3       	ldi	r25, 0x3E	; 62
    1198:	d9 de       	rcall	.-590    	; 0xf4c <qtm_calibrate_sensor_node>
    119a:	21 96       	adiw	r28, 0x01	; 1
    119c:	c3 30       	cpi	r28, 0x03	; 3
    119e:	d1 05       	cpc	r29, r1
    11a0:	a0 f3       	brcs	.-24     	; 0x118a <touch_sensors_config+0x16>
    11a2:	c0 e0       	ldi	r28, 0x00	; 0
    11a4:	d0 e0       	ldi	r29, 0x00	; 0
    11a6:	0e c0       	rjmp	.+28     	; 0x11c4 <touch_sensors_config+0x50>
    11a8:	ae 01       	movw	r20, r28
    11aa:	44 0f       	add	r20, r20
    11ac:	55 1f       	adc	r21, r21
    11ae:	44 0f       	add	r20, r20
    11b0:	55 1f       	adc	r21, r21
    11b2:	4c 0f       	add	r20, r28
    11b4:	5d 1f       	adc	r21, r29
    11b6:	49 5f       	subi	r20, 0xF9	; 249
    11b8:	51 4c       	sbci	r21, 0xC1	; 193
    11ba:	6c 2f       	mov	r22, r28
    11bc:	86 e6       	ldi	r24, 0x66	; 102
    11be:	9e e3       	ldi	r25, 0x3E	; 62
    11c0:	c0 d0       	rcall	.+384    	; 0x1342 <qtm_init_sensor_key>
    11c2:	21 96       	adiw	r28, 0x01	; 1
    11c4:	c3 30       	cpi	r28, 0x03	; 3
    11c6:	d1 05       	cpc	r29, r1
    11c8:	78 f3       	brcs	.-34     	; 0x11a8 <touch_sensors_config+0x34>
    11ca:	80 e0       	ldi	r24, 0x00	; 0
    11cc:	df 91       	pop	r29
    11ce:	cf 91       	pop	r28
    11d0:	08 95       	ret

Disassembly of section .text.qtm_error_callback:

000015d4 <qtm_error_callback>:
    post processing module2 error = 3
    ... and so on
============================================================================*/
static void qtm_error_callback(uint8_t error)
{
	module_error_code = error + 1u;
    15d4:	8f 5f       	subi	r24, 0xFF	; 255
    15d6:	80 93 85 3e 	sts	0x3E85, r24	; 0x803e85 <module_error_code>

#if DEF_TOUCH_DATA_STREAMER_ENABLE == 1
	datastreamer_output();
    15da:	6f db       	rcall	.-2338   	; 0xcba <datastreamer_output>
    15dc:	08 95       	ret

Disassembly of section .text.Timer_set_period:

00001550 <Timer_set_period>:
Output : none
Notes  :
============================================================================*/
void Timer_set_period(const uint8_t val)
{
	while (RTC.STATUS & RTC_PERBUSY_bm) /* wait for RTC synchronization */
    1550:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <__RODATA_PM_OFFSET__+0x7f8141>
    1554:	92 fd       	sbrc	r25, 2
    1556:	fc cf       	rjmp	.-8      	; 0x1550 <Timer_set_period>
		;
	RTC.PER = val;
    1558:	90 e0       	ldi	r25, 0x00	; 0
    155a:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <__RODATA_PM_OFFSET__+0x7f814a>
    155e:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <__RODATA_PM_OFFSET__+0x7f814b>
    1562:	08 95       	ret

Disassembly of section .text.touch_init:

000015bc <touch_init>:
============================================================================*/
void touch_init(void)
{

	/* Set match value for timer */
	Timer_set_period(32);
    15bc:	80 e2       	ldi	r24, 0x20	; 32
    15be:	c8 df       	rcall	.-112    	; 0x1550 <Timer_set_period>

	/* configure the PTC pins for Input*/
	touch_ptc_pin_config();
    15c0:	df de       	rcall	.-578    	; 0x1380 <touch_ptc_pin_config>

	/* Configure touch sensors with Application specific settings */
	touch_sensors_config();
    15c2:	d8 dd       	rcall	.-1104   	; 0x1174 <touch_sensors_config>

#if DEF_TOUCH_DATA_STREAMER_ENABLE == 1
	datastreamer_init();
    15c4:	25 d0       	rcall	.+74     	; 0x1610 <datastreamer_init>
    15c6:	08 95       	ret

Disassembly of section .text.touch_process:

00001114 <touch_process>:
	return (ptc_qtlib_node_stat1[sensor_node].node_acq_signals);
}

void update_sensor_node_signal(uint16_t sensor_node, uint16_t new_signal)
{
	ptc_qtlib_node_stat1[sensor_node].node_acq_signals = new_signal;
    1114:	80 91 88 3e 	lds	r24, 0x3E88	; 0x803e88 <time_to_measure_touch_flag>
    1118:	81 30       	cpi	r24, 0x01	; 1
    111a:	49 f4       	brne	.+18     	; 0x112e <touch_process+0x1a>
    111c:	6f ee       	ldi	r22, 0xEF	; 239
    111e:	7a e0       	ldi	r23, 0x0A	; 10
    1120:	8e e6       	ldi	r24, 0x6E	; 110
    1122:	9e e3       	ldi	r25, 0x3E	; 62
    1124:	ad de       	rcall	.-678    	; 0xe80 <qtm_ptc_start_measurement_seq>
    1126:	81 11       	cpse	r24, r1
    1128:	02 c0       	rjmp	.+4      	; 0x112e <touch_process+0x1a>
    112a:	10 92 88 3e 	sts	0x3E88, r1	; 0x803e88 <time_to_measure_touch_flag>
    112e:	80 91 87 3e 	lds	r24, 0x3E87	; 0x803e87 <touch_postprocess_request>
    1132:	81 30       	cpi	r24, 0x01	; 1
    1134:	f1 f4       	brne	.+60     	; 0x1172 <touch_process+0x5e>
    1136:	10 92 87 3e 	sts	0x3E87, r1	; 0x803e87 <touch_postprocess_request>
    113a:	bf db       	rcall	.-2178   	; 0x8ba <qtm_acquisition_process>
    113c:	81 11       	cpse	r24, r1
    113e:	08 c0       	rjmp	.+16     	; 0x1150 <touch_process+0x3c>
    1140:	86 e6       	ldi	r24, 0x66	; 102
    1142:	9e e3       	ldi	r25, 0x3E	; 62
    1144:	a8 d7       	rcall	.+3920   	; 0x2096 <__TEXT_REGION_LENGTH__+0x96>
    1146:	88 23       	and	r24, r24
    1148:	29 f0       	breq	.+10     	; 0x1154 <touch_process+0x40>
    114a:	81 e0       	ldi	r24, 0x01	; 1
    114c:	43 d2       	rcall	.+1158   	; 0x15d4 <qtm_error_callback>
    114e:	02 c0       	rjmp	.+4      	; 0x1154 <touch_process+0x40>
    1150:	80 e0       	ldi	r24, 0x00	; 0
    1152:	40 d2       	rcall	.+1152   	; 0x15d4 <qtm_error_callback>
    1154:	e0 91 66 3e 	lds	r30, 0x3E66	; 0x803e66 <qtlib_key_set1>
    1158:	f0 91 67 3e 	lds	r31, 0x3E67	; 0x803e67 <qtlib_key_set1+0x1>
    115c:	80 81       	ld	r24, Z
    115e:	88 23       	and	r24, r24
    1160:	24 f4       	brge	.+8      	; 0x116a <touch_process+0x56>
    1162:	81 e0       	ldi	r24, 0x01	; 1
    1164:	80 93 88 3e 	sts	0x3E88, r24	; 0x803e88 <time_to_measure_touch_flag>
    1168:	03 c0       	rjmp	.+6      	; 0x1170 <touch_process+0x5c>
    116a:	81 e0       	ldi	r24, 0x01	; 1
    116c:	80 93 86 3e 	sts	0x3E86, r24	; 0x803e86 <measurement_done_touch>
    1170:	a4 dd       	rcall	.-1208   	; 0xcba <datastreamer_output>
    1172:	08 95       	ret

Disassembly of section .text.touch_timer_handler:

0000144c <touch_timer_handler>:
    144c:	80 91 06 3e 	lds	r24, 0x3E06	; 0x803e06 <interrupt_cnt>
    1450:	8f 5f       	subi	r24, 0xFF	; 255
    1452:	80 93 06 3e 	sts	0x3E06, r24	; 0x803e06 <interrupt_cnt>
    1456:	84 31       	cpi	r24, 0x14	; 20
    1458:	40 f0       	brcs	.+16     	; 0x146a <touch_timer_handler+0x1e>
    145a:	10 92 06 3e 	sts	0x3E06, r1	; 0x803e06 <interrupt_cnt>
    145e:	81 e0       	ldi	r24, 0x01	; 1
    1460:	80 93 88 3e 	sts	0x3E88, r24	; 0x803e88 <time_to_measure_touch_flag>
    1464:	84 e1       	ldi	r24, 0x14	; 20
    1466:	90 e0       	ldi	r25, 0x00	; 0
    1468:	5e d0       	rcall	.+188    	; 0x1526 <qtm_update_qtlib_timer>
    146a:	08 95       	ret

Disassembly of section .text.get_sensor_node_signal:

000014aa <get_sensor_node_signal>:
    14aa:	fc 01       	movw	r30, r24
    14ac:	ee 0f       	add	r30, r30
    14ae:	ff 1f       	adc	r31, r31
    14b0:	ee 0f       	add	r30, r30
    14b2:	ff 1f       	adc	r31, r31
    14b4:	8e 0f       	add	r24, r30
    14b6:	9f 1f       	adc	r25, r31
    14b8:	fc 01       	movw	r30, r24
    14ba:	e9 5f       	subi	r30, 0xF9	; 249
    14bc:	f1 4c       	sbci	r31, 0xC1	; 193
    14be:	81 81       	ldd	r24, Z+1	; 0x01
    14c0:	92 81       	ldd	r25, Z+2	; 0x02
    14c2:	08 95       	ret

Disassembly of section .text.get_sensor_node_reference:

000014f6 <get_sensor_node_reference>:
}

uint16_t get_sensor_node_reference(uint16_t sensor_node)
{
	return (qtlib_key_data_set1[sensor_node].channel_reference);
    14f6:	fc 01       	movw	r30, r24
    14f8:	ee 0f       	add	r30, r30
    14fa:	ff 1f       	adc	r31, r31
    14fc:	e8 0f       	add	r30, r24
    14fe:	f9 1f       	adc	r31, r25
    1500:	ee 0f       	add	r30, r30
    1502:	ff 1f       	adc	r31, r31
    1504:	e4 5e       	subi	r30, 0xE4	; 228
    1506:	f1 4c       	sbci	r31, 0xC1	; 193
}
    1508:	84 81       	ldd	r24, Z+4	; 0x04
    150a:	95 81       	ldd	r25, Z+5	; 0x05
    150c:	08 95       	ret

Disassembly of section .text.get_sensor_cc_val:

000014c4 <get_sensor_cc_val>:
	return (ptc_qtlib_node_stat1[sensor_node].node_acq_signals);
}

void update_sensor_node_signal(uint16_t sensor_node, uint16_t new_signal)
{
	ptc_qtlib_node_stat1[sensor_node].node_acq_signals = new_signal;
    14c4:	fc 01       	movw	r30, r24
    14c6:	ee 0f       	add	r30, r30
    14c8:	ff 1f       	adc	r31, r31
    14ca:	ee 0f       	add	r30, r30
    14cc:	ff 1f       	adc	r31, r31
    14ce:	8e 0f       	add	r24, r30
    14d0:	9f 1f       	adc	r25, r31
    14d2:	fc 01       	movw	r30, r24
    14d4:	e9 5f       	subi	r30, 0xF9	; 249
    14d6:	f1 4c       	sbci	r31, 0xC1	; 193
    14d8:	83 81       	ldd	r24, Z+3	; 0x03
    14da:	94 81       	ldd	r25, Z+4	; 0x04
    14dc:	08 95       	ret

Disassembly of section .text.get_sensor_state:

0000148c <get_sensor_state>:
    148c:	e0 91 6a 3e 	lds	r30, 0x3E6A	; 0x803e6a <qtlib_key_set1+0x4>
    1490:	f0 91 6b 3e 	lds	r31, 0x3E6B	; 0x803e6b <qtlib_key_set1+0x5>
    1494:	9c 01       	movw	r18, r24
    1496:	22 0f       	add	r18, r18
    1498:	33 1f       	adc	r19, r19
    149a:	82 0f       	add	r24, r18
    149c:	93 1f       	adc	r25, r19
    149e:	88 0f       	add	r24, r24
    14a0:	99 1f       	adc	r25, r25
    14a2:	e8 0f       	add	r30, r24
    14a4:	f9 1f       	adc	r31, r25
    14a6:	80 81       	ld	r24, Z
    14a8:	08 95       	ret

Disassembly of section .text.__vector_17:

00001276 <__vector_17>:
    1276:	1f 92       	push	r1
    1278:	0f 92       	push	r0
    127a:	0f b6       	in	r0, 0x3f	; 63
    127c:	0f 92       	push	r0
    127e:	11 24       	eor	r1, r1
    1280:	2f 93       	push	r18
    1282:	3f 93       	push	r19
    1284:	4f 93       	push	r20
    1286:	5f 93       	push	r21
    1288:	6f 93       	push	r22
    128a:	7f 93       	push	r23
    128c:	8f 93       	push	r24
    128e:	9f 93       	push	r25
    1290:	af 93       	push	r26
    1292:	bf 93       	push	r27
    1294:	ef 93       	push	r30
    1296:	ff 93       	push	r31
    1298:	9c df       	rcall	.-200    	; 0x11d2 <qtm_t81x_ptc_handler_eoc>
    129a:	ff 91       	pop	r31
    129c:	ef 91       	pop	r30
    129e:	bf 91       	pop	r27
    12a0:	af 91       	pop	r26
    12a2:	9f 91       	pop	r25
    12a4:	8f 91       	pop	r24
    12a6:	7f 91       	pop	r23
    12a8:	6f 91       	pop	r22
    12aa:	5f 91       	pop	r21
    12ac:	4f 91       	pop	r20
    12ae:	3f 91       	pop	r19
    12b0:	2f 91       	pop	r18
    12b2:	0f 90       	pop	r0
    12b4:	0f be       	out	0x3f, r0	; 63
    12b6:	0f 90       	pop	r0
    12b8:	1f 90       	pop	r1
    12ba:	18 95       	reti

Disassembly of section .text.BOD_init:

00001606 <BOD_init>:
	//		 | BOD_VLMCFG_BELOW_gc; /* Interrupt when supply goes below VLM level */

	// BOD.VLMCTRLA = BOD_VLMLVL_5ABOVE_gc; /* VLM threshold 5% above BOD level */

	return 0;
}
    1606:	80 e0       	ldi	r24, 0x00	; 0
    1608:	08 95       	ret

Disassembly of section .text.CLKCTRL_init:

000015a0 <CLKCTRL_init>:
 *       on calling convention. The memory model is not visible to the
 *       preprocessor, so it must be defined in the Assembler preprocessor directives.
 */
static inline void ccp_write_io(void *addr, uint8_t value)
{
	protected_write_io(addr, CCP_IOREG_gc, value);
    15a0:	40 e0       	ldi	r20, 0x00	; 0
    15a2:	68 ed       	ldi	r22, 0xD8	; 216
    15a4:	81 e6       	ldi	r24, 0x61	; 97
    15a6:	90 e0       	ldi	r25, 0x00	; 0
    15a8:	1e d0       	rcall	.+60     	; 0x15e6 <protected_write_io>
	//		 | 0 << CLKCTRL_CLKOUT_bp /* System clock out: disabled */);

	// ccp_write_io((void*)&(CLKCTRL.MCLKLOCK),0 << CLKCTRL_LOCKEN_bp /* lock enable: disabled */);

	return 0;
}
    15aa:	80 e0       	ldi	r24, 0x00	; 0
    15ac:	08 95       	ret

Disassembly of section .text.CPUINT_init:

000015fa <CPUINT_init>:

	// CPUINT.LVL0PRI = 0x0 << CPUINT_LVL0PRI_gp; /* Interrupt Level Priority: 0x0 */

	// CPUINT.LVL1VEC = 0x0 << CPUINT_LVL1VEC_gp; /* Interrupt Vector with High Priority: 0x0 */

	ENABLE_INTERRUPTS();
    15fa:	78 94       	sei

	return 0;
}
    15fc:	80 e0       	ldi	r24, 0x00	; 0
    15fe:	08 95       	ret

Disassembly of section .text.mcu_init:

000013b8 <mcu_init>:
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    13b8:	80 e0       	ldi	r24, 0x00	; 0
    13ba:	08 c0       	rjmp	.+16     	; 0x13cc <mcu_init+0x14>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    13bc:	e8 2f       	mov	r30, r24
    13be:	f0 e0       	ldi	r31, 0x00	; 0
    13c0:	e0 5f       	subi	r30, 0xF0	; 240
    13c2:	fb 4f       	sbci	r31, 0xFB	; 251
    13c4:	90 81       	ld	r25, Z
    13c6:	98 60       	ori	r25, 0x08	; 8
    13c8:	90 83       	st	Z, r25
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	/* Set all pins to low power mode */

	for (uint8_t i = 0; i < 8; i++) {
    13ca:	8f 5f       	subi	r24, 0xFF	; 255
    13cc:	88 30       	cpi	r24, 0x08	; 8
    13ce:	b0 f3       	brcs	.-20     	; 0x13bc <mcu_init+0x4>
    13d0:	80 e0       	ldi	r24, 0x00	; 0
    13d2:	08 c0       	rjmp	.+16     	; 0x13e4 <mcu_init+0x2c>
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
    13d4:	e8 2f       	mov	r30, r24
    13d6:	f0 e0       	ldi	r31, 0x00	; 0
    13d8:	e0 5d       	subi	r30, 0xD0	; 208
    13da:	fb 4f       	sbci	r31, 0xFB	; 251
    13dc:	90 81       	ld	r25, Z
    13de:	98 60       	ori	r25, 0x08	; 8
    13e0:	90 83       	st	Z, r25

	for (uint8_t i = 0; i < 8; i++) {
		*((uint8_t *)&PORTA + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}

	for (uint8_t i = 0; i < 8; i++) {
    13e2:	8f 5f       	subi	r24, 0xFF	; 255
    13e4:	88 30       	cpi	r24, 0x08	; 8
    13e6:	b0 f3       	brcs	.-20     	; 0x13d4 <mcu_init+0x1c>
		*((uint8_t *)&PORTB + 0x10 + i) |= 1 << PORT_PULLUPEN_bp;
	}
}
    13e8:	08 95       	ret

Disassembly of section .text.USART_initialization:

0000146c <USART_initialization>:
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
    146c:	84 b1       	in	r24, 0x04	; 4
    146e:	87 7f       	andi	r24, 0xF7	; 247
    1470:	84 b9       	out	0x04, r24	; 4
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    1472:	e3 e3       	ldi	r30, 0x33	; 51
    1474:	f4 e0       	ldi	r31, 0x04	; 4
    1476:	80 81       	ld	r24, Z
    1478:	87 7f       	andi	r24, 0xF7	; 247
    147a:	80 83       	st	Z, r24
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
	} else {
		VPORTB.OUT &= ~(1 << pin);
    147c:	85 b1       	in	r24, 0x05	; 5
    147e:	8b 7f       	andi	r24, 0xFB	; 251
    1480:	85 b9       	out	0x05, r24	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    1482:	84 b1       	in	r24, 0x04	; 4
    1484:	84 60       	ori	r24, 0x04	; 4
    1486:	84 b9       	out	0x04, r24	; 4
	    // <true"> High
	    false);

	PB2_set_dir(PORT_DIR_OUT);

	USART_init();
    1488:	6d d0       	rcall	.+218    	; 0x1564 <USART_init>
    148a:	08 95       	ret

Disassembly of section .text.system_init:

000012bc <system_init>:
/**
 * \brief System initialization
 */
void system_init()
{
	mcu_init();
    12bc:	7d d0       	rcall	.+250    	; 0x13b8 <mcu_init>
 *                  false = Pin level set to "low" state
 */
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
    12be:	81 b1       	in	r24, 0x01	; 1
    12c0:	82 60       	ori	r24, 0x02	; 2
    12c2:	81 b9       	out	0x01, r24	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    12c4:	80 b1       	in	r24, 0x00	; 0
    12c6:	82 60       	ori	r24, 0x02	; 2
    12c8:	80 b9       	out	0x00, r24	; 0
 *                  false = Pin level set to "low" state
 */
static inline void PORTA_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTA.OUT |= (1 << pin);
    12ca:	81 b1       	in	r24, 0x01	; 1
    12cc:	84 60       	ori	r24, 0x04	; 4
    12ce:	81 b9       	out	0x01, r24	; 1
	switch (dir) {
	case PORT_DIR_IN:
		VPORTA.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTA.DIR |= (1 << pin);
    12d0:	80 b1       	in	r24, 0x00	; 0
    12d2:	84 60       	ori	r24, 0x04	; 4
    12d4:	80 b9       	out	0x00, r24	; 0
 *                  false = Pin level set to "low" state
 */
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level == true) {
		VPORTB.OUT |= (1 << pin);
    12d6:	85 b1       	in	r24, 0x05	; 5
    12d8:	81 60       	ori	r24, 0x01	; 1
    12da:	85 b9       	out	0x05, r24	; 5
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		VPORTB.DIR |= (1 << pin);
    12dc:	84 b1       	in	r24, 0x04	; 4
    12de:	81 60       	ori	r24, 0x01	; 1
    12e0:	84 b9       	out	0x04, r24	; 4
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir dir)
{
	switch (dir) {
	case PORT_DIR_IN:
		VPORTB.DIR &= ~(1 << pin);
    12e2:	84 b1       	in	r24, 0x04	; 4
    12e4:	8d 7f       	andi	r24, 0xFD	; 253
    12e6:	84 b9       	out	0x04, r24	; 4
	volatile uint8_t *port_pin_ctrl = ((uint8_t *)&PORTB + 0x10 + pin);

	if (pull_mode == PORT_PULL_UP) {
		*port_pin_ctrl |= PORT_PULLUPEN_bm;
	} else if (pull_mode == PORT_PULL_OFF) {
		*port_pin_ctrl &= ~PORT_PULLUPEN_bm;
    12e8:	e1 e3       	ldi	r30, 0x31	; 49
    12ea:	f4 e0       	ldi	r31, 0x04	; 4
    12ec:	80 81       	ld	r24, Z
    12ee:	87 7f       	andi	r24, 0xF7	; 247
    12f0:	80 83       	st	Z, r24
	    // <id> pad_pull_config
	    // <PORT_PULL_OFF"> Off
	    // <PORT_PULL_UP"> Pull-up
	    PORT_PULL_OFF);

	CLKCTRL_init();
    12f2:	56 d1       	rcall	.+684    	; 0x15a0 <CLKCTRL_init>

	Timer_init();
    12f4:	0c d1       	rcall	.+536    	; 0x150e <Timer_init>

	USART_initialization();
    12f6:	ba d0       	rcall	.+372    	; 0x146c <USART_initialization>

	CPUINT_init();
    12f8:	80 d1       	rcall	.+768    	; 0x15fa <CPUINT_init>

	SLPCTRL_init();
    12fa:	87 d1       	rcall	.+782    	; 0x160a <SLPCTRL_init>

	BOD_init();
    12fc:	84 d1       	rcall	.+776    	; 0x1606 <BOD_init>
    12fe:	08 95       	ret

Disassembly of section .text.protected_write_io:

000015e6 <protected_write_io>:
#if defined(__GNUC__)
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
#endif
	movw    r30, r24                // Load addr into Z
    15e6:	fc 01       	movw	r30, r24
	out     CCP, r22                // Start CCP handshake
    15e8:	64 bf       	out	0x34, r22	; 52
	st      Z, r20                  // Write value to I/O register
    15ea:	40 83       	st	Z, r20
	ret                             // Return to caller
    15ec:	08 95       	ret

Disassembly of section .text.Timer_init:

0000150e <Timer_init>:
 * \return Initialization status.
 */
int8_t Timer_init()
{

	while (RTC.STATUS > 0) { /* Wait for all register to be synchronized */
    150e:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__RODATA_PM_OFFSET__+0x7f8141>
    1512:	81 11       	cpse	r24, r1
    1514:	fc cf       	rjmp	.-8      	; 0x150e <Timer_init>

	// RTC.CMP = 0x0; /* Compare: 0x0 */

	// RTC.CNT = 0x0; /* Counter: 0x0 */

	RTC.CTRLA = RTC_PRESCALER_DIV1_gc   /* 1 */
    1516:	e0 e4       	ldi	r30, 0x40	; 64
    1518:	f1 e0       	ldi	r31, 0x01	; 1
    151a:	81 e8       	ldi	r24, 0x81	; 129
    151c:	80 83       	st	Z, r24

	// RTC.CLKSEL = RTC_CLKSEL_INT32K_gc; /* 32KHz Internal Ultra Low Power Oscillator (OSCULP32K) */

	// RTC.DBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	RTC.INTCTRL = 1 << RTC_CMP_bp    /* Compare Match Interrupt enable: enabled */
    151e:	82 e0       	ldi	r24, 0x02	; 2
    1520:	82 83       	std	Z+2, r24	; 0x02
	// RTC.PITDBGCTRL = 0 << RTC_DBGRUN_bp; /* Run in debug: disabled */

	// RTC.PITINTCTRL = 0 << RTC_PI_bp; /* Periodic Interrupt: disabled */

	return 0;
}
    1522:	80 e0       	ldi	r24, 0x00	; 0
    1524:	08 95       	ret

Disassembly of section .text.SLPCTRL_init:

0000160a <SLPCTRL_init>:

	// SLPCTRL.CTRLA = 0 << SLPCTRL_SEN_bp /* Sleep enable: disabled */
	//		 | SLPCTRL_SMODE_IDLE_gc; /* Idle mode */

	return 0;
}
    160a:	80 e0       	ldi	r24, 0x00	; 0
    160c:	08 95       	ret

Disassembly of section .text.USART_init:

00001564 <USART_init>:
 * \return Data register from USART module
 */
uint8_t USART_get_data()
{
	return USART0.RXDATAL;
}
    1564:	e0 e0       	ldi	r30, 0x00	; 0
    1566:	f8 e0       	ldi	r31, 0x08	; 8
    1568:	83 e2       	ldi	r24, 0x23	; 35
    156a:	98 e0       	ldi	r25, 0x08	; 8
    156c:	80 87       	std	Z+8, r24	; 0x08
    156e:	91 87       	std	Z+9, r25	; 0x09
    1570:	80 ec       	ldi	r24, 0xC0	; 192
    1572:	86 83       	std	Z+6, r24	; 0x06
    1574:	80 e0       	ldi	r24, 0x00	; 0
    1576:	08 95       	ret

Disassembly of section .text.USART_is_tx_ready:

000015c8 <USART_is_tx_ready>:
 * \retval false The USART can not receive data to be transmitted
 * \retval true The USART can receive data to be transmitted
 */
bool USART_is_tx_ready()
{
	return (USART0.STATUS & USART_DREIF_bm);
    15c8:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <__RODATA_PM_OFFSET__+0x7f8804>
}
    15cc:	85 fb       	bst	r24, 5
    15ce:	88 27       	eor	r24, r24
    15d0:	80 f9       	bld	r24, 0
    15d2:	08 95       	ret

Disassembly of section .text.USART_is_tx_busy:

00001578 <USART_is_tx_busy>:
 * \return Data register from USART module
 */
uint8_t USART_get_data()
{
	return USART0.RXDATAL;
}
    1578:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <__RODATA_PM_OFFSET__+0x7f8804>
    157c:	82 95       	swap	r24
    157e:	86 95       	lsr	r24
    1580:	86 95       	lsr	r24
    1582:	83 70       	andi	r24, 0x03	; 3
    1584:	91 e0       	ldi	r25, 0x01	; 1
    1586:	89 27       	eor	r24, r25
    1588:	81 70       	andi	r24, 0x01	; 1
    158a:	08 95       	ret

Disassembly of section .text.USART_write:

000015ae <USART_write>:
    15ae:	90 91 04 08 	lds	r25, 0x0804	; 0x800804 <__RODATA_PM_OFFSET__+0x7f8804>
    15b2:	95 ff       	sbrs	r25, 5
    15b4:	fc cf       	rjmp	.-8      	; 0x15ae <USART_write>
    15b6:	80 93 02 08 	sts	0x0802, r24	; 0x800802 <__RODATA_PM_OFFSET__+0x7f8802>
    15ba:	08 95       	ret

Disassembly of section .text.qtm_measure_node:

00000bb0 <qtm_measure_node>:
 bb0:	cf 93       	push	r28
 bb2:	df 93       	push	r29
 bb4:	bc 01       	movw	r22, r24
 bb6:	e0 91 7b 3e 	lds	r30, 0x3E7B	; 0x803e7b <qtm_acquisition_control_working_set_ptr>
 bba:	f0 91 7c 3e 	lds	r31, 0x3E7C	; 0x803e7c <qtm_acquisition_control_working_set_ptr+0x1>
 bbe:	86 e0       	ldi	r24, 0x06	; 6
 bc0:	86 9f       	mul	r24, r22
 bc2:	90 01       	movw	r18, r0
 bc4:	87 9f       	mul	r24, r23
 bc6:	30 0d       	add	r19, r0
 bc8:	11 24       	eor	r1, r1
 bca:	c2 81       	ldd	r28, Z+2	; 0x02
 bcc:	d3 81       	ldd	r29, Z+3	; 0x03
 bce:	c2 0f       	add	r28, r18
 bd0:	d3 1f       	adc	r29, r19
 bd2:	89 81       	ldd	r24, Y+1	; 0x01
 bd4:	80 93 2a 06 	sts	0x062A, r24	; 0x80062a <__RODATA_PM_OFFSET__+0x7f862a>
 bd8:	a2 81       	ldd	r26, Z+2	; 0x02
 bda:	b3 81       	ldd	r27, Z+3	; 0x03
 bdc:	a2 0f       	add	r26, r18
 bde:	b3 1f       	adc	r27, r19
 be0:	8c 91       	ld	r24, X
 be2:	80 93 26 06 	sts	0x0626, r24	; 0x800626 <__RODATA_PM_OFFSET__+0x7f8626>
 be6:	95 e0       	ldi	r25, 0x05	; 5
 be8:	96 9f       	mul	r25, r22
 bea:	a0 01       	movw	r20, r0
 bec:	97 9f       	mul	r25, r23
 bee:	50 0d       	add	r21, r0
 bf0:	11 24       	eor	r1, r1
 bf2:	c4 81       	ldd	r28, Z+4	; 0x04
 bf4:	d5 81       	ldd	r29, Z+5	; 0x05
 bf6:	c4 0f       	add	r28, r20
 bf8:	d5 1f       	adc	r29, r21
 bfa:	8b 81       	ldd	r24, Y+3	; 0x03
 bfc:	80 93 1a 06 	sts	0x061A, r24	; 0x80061a <__RODATA_PM_OFFSET__+0x7f861a>
 c00:	c4 81       	ldd	r28, Z+4	; 0x04
 c02:	d5 81       	ldd	r29, Z+5	; 0x05
 c04:	c4 0f       	add	r28, r20
 c06:	d5 1f       	adc	r29, r21
 c08:	8c 81       	ldd	r24, Y+4	; 0x04
 c0a:	80 93 1b 06 	sts	0x061B, r24	; 0x80061b <__RODATA_PM_OFFSET__+0x7f861b>
 c0e:	a4 81       	ldd	r26, Z+4	; 0x04
 c10:	b5 81       	ldd	r27, Z+5	; 0x05
 c12:	a4 0f       	add	r26, r20
 c14:	b5 1f       	adc	r27, r21
 c16:	8c 91       	ld	r24, X
 c18:	81 fd       	sbrc	r24, 1
 c1a:	9c 93       	st	X, r25
 c1c:	84 81       	ldd	r24, Z+4	; 0x04
 c1e:	95 81       	ldd	r25, Z+5	; 0x05
 c20:	dc 01       	movw	r26, r24
 c22:	a4 0f       	add	r26, r20
 c24:	b5 1f       	adc	r27, r21
 c26:	8c 91       	ld	r24, X
 c28:	8c 71       	andi	r24, 0x1C	; 28
 c2a:	71 f4       	brne	.+28     	; 0xc48 <qtm_measure_node+0x98>
 c2c:	c2 81       	ldd	r28, Z+2	; 0x02
 c2e:	d3 81       	ldd	r29, Z+3	; 0x03
 c30:	c2 0f       	add	r28, r18
 c32:	d3 1f       	adc	r29, r19
 c34:	ac 81       	ldd	r26, Y+4	; 0x04
 c36:	a2 95       	swap	r26
 c38:	af 70       	andi	r26, 0x0F	; 15
 c3a:	b0 e0       	ldi	r27, 0x00	; 0
 c3c:	a0 50       	subi	r26, 0x00	; 0
 c3e:	ba 46       	sbci	r27, 0x6A	; 106
 c40:	8c 91       	ld	r24, X
 c42:	80 93 1c 06 	sts	0x061C, r24	; 0x80061c <__RODATA_PM_OFFSET__+0x7f861c>
 c46:	03 c0       	rjmp	.+6      	; 0xc4e <qtm_measure_node+0x9e>
 c48:	8f e3       	ldi	r24, 0x3F	; 63
 c4a:	80 93 1c 06 	sts	0x061C, r24	; 0x80061c <__RODATA_PM_OFFSET__+0x7f861c>
 c4e:	c2 81       	ldd	r28, Z+2	; 0x02
 c50:	d3 81       	ldd	r29, Z+3	; 0x03
 c52:	c2 0f       	add	r28, r18
 c54:	d3 1f       	adc	r29, r19
 c56:	8a 81       	ldd	r24, Y+2	; 0x02
 c58:	8b 31       	cpi	r24, 0x1B	; 27
 c5a:	20 f4       	brcc	.+8      	; 0xc64 <qtm_measure_node+0xb4>
 c5c:	8c 5f       	subi	r24, 0xFC	; 252
 c5e:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <__RODATA_PM_OFFSET__+0x7f8605>
 c62:	03 c0       	rjmp	.+6      	; 0xc6a <qtm_measure_node+0xba>
 c64:	8f e1       	ldi	r24, 0x1F	; 31
 c66:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <__RODATA_PM_OFFSET__+0x7f8605>
 c6a:	c2 81       	ldd	r28, Z+2	; 0x02
 c6c:	d3 81       	ldd	r29, Z+3	; 0x03
 c6e:	c2 0f       	add	r28, r18
 c70:	d3 1f       	adc	r29, r19
 c72:	8d 81       	ldd	r24, Y+5	; 0x05
 c74:	80 93 01 06 	sts	0x0601, r24	; 0x800601 <__RODATA_PM_OFFSET__+0x7f8601>
 c78:	c2 81       	ldd	r28, Z+2	; 0x02
 c7a:	d3 81       	ldd	r29, Z+3	; 0x03
 c7c:	c2 0f       	add	r28, r18
 c7e:	d3 1f       	adc	r29, r19
 c80:	8b 81       	ldd	r24, Y+3	; 0x03
 c82:	82 95       	swap	r24
 c84:	8f 70       	andi	r24, 0x0F	; 15
 c86:	80 93 19 06 	sts	0x0619, r24	; 0x800619 <__RODATA_PM_OFFSET__+0x7f8619>
 c8a:	82 81       	ldd	r24, Z+2	; 0x02
 c8c:	93 81       	ldd	r25, Z+3	; 0x03
 c8e:	fc 01       	movw	r30, r24
 c90:	e2 0f       	add	r30, r18
 c92:	f3 1f       	adc	r31, r19
 c94:	83 81       	ldd	r24, Z+3	; 0x03
 c96:	8f 70       	andi	r24, 0x0F	; 15
 c98:	80 61       	ori	r24, 0x10	; 16
 c9a:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__RODATA_PM_OFFSET__+0x7f8602>
 c9e:	80 91 18 06 	lds	r24, 0x0618	; 0x800618 <__RODATA_PM_OFFSET__+0x7f8618>
 ca2:	83 60       	ori	r24, 0x03	; 3
 ca4:	80 93 18 06 	sts	0x0618, r24	; 0x800618 <__RODATA_PM_OFFSET__+0x7f8618>
 ca8:	81 e8       	ldi	r24, 0x81	; 129
 caa:	80 93 00 06 	sts	0x0600, r24	; 0x800600 <__RODATA_PM_OFFSET__+0x7f8600>
 cae:	81 e0       	ldi	r24, 0x01	; 1
 cb0:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__RODATA_PM_OFFSET__+0x7f8608>
 cb4:	df 91       	pop	r29
 cb6:	cf 91       	pop	r28
 cb8:	08 95       	ret

Disassembly of section .text.select_next_channel_to_measure:

000010ac <select_next_channel_to_measure>:
    10ac:	cf 93       	push	r28
    10ae:	df 93       	push	r29
    10b0:	80 91 7f 3e 	lds	r24, 0x3E7F	; 0x803e7f <current_measure_channel>
    10b4:	90 91 80 3e 	lds	r25, 0x3E80	; 0x803e80 <current_measure_channel+0x1>
    10b8:	c0 91 7b 3e 	lds	r28, 0x3E7B	; 0x803e7b <qtm_acquisition_control_working_set_ptr>
    10bc:	d0 91 7c 3e 	lds	r29, 0x3E7C	; 0x803e7c <qtm_acquisition_control_working_set_ptr+0x1>
    10c0:	e8 81       	ld	r30, Y
    10c2:	f9 81       	ldd	r31, Y+1	; 0x01
    10c4:	40 81       	ld	r20, Z
    10c6:	51 81       	ldd	r21, Z+1	; 0x01
    10c8:	25 e0       	ldi	r18, 0x05	; 5
    10ca:	28 9f       	mul	r18, r24
    10cc:	b0 01       	movw	r22, r0
    10ce:	29 9f       	mul	r18, r25
    10d0:	70 0d       	add	r23, r0
    10d2:	11 24       	eor	r1, r1
    10d4:	20 e0       	ldi	r18, 0x00	; 0
    10d6:	30 e0       	ldi	r19, 0x00	; 0
    10d8:	84 17       	cp	r24, r20
    10da:	95 07       	cpc	r25, r21
    10dc:	98 f4       	brcc	.+38     	; 0x1104 <select_next_channel_to_measure+0x58>
    10de:	ec 81       	ldd	r30, Y+4	; 0x04
    10e0:	fd 81       	ldd	r31, Y+5	; 0x05
    10e2:	e2 0f       	add	r30, r18
    10e4:	f3 1f       	adc	r31, r19
    10e6:	e6 0f       	add	r30, r22
    10e8:	f7 1f       	adc	r31, r23
    10ea:	e0 81       	ld	r30, Z
    10ec:	2b 5f       	subi	r18, 0xFB	; 251
    10ee:	3f 4f       	sbci	r19, 0xFF	; 255
    10f0:	e0 fd       	sbrc	r30, 0
    10f2:	02 c0       	rjmp	.+4      	; 0x10f8 <select_next_channel_to_measure+0x4c>
    10f4:	01 96       	adiw	r24, 0x01	; 1
    10f6:	f0 cf       	rjmp	.-32     	; 0x10d8 <select_next_channel_to_measure+0x2c>
    10f8:	80 93 7f 3e 	sts	0x3E7F, r24	; 0x803e7f <current_measure_channel>
    10fc:	90 93 80 3e 	sts	0x3E80, r25	; 0x803e80 <current_measure_channel+0x1>
    1100:	80 e0       	ldi	r24, 0x00	; 0
    1102:	05 c0       	rjmp	.+10     	; 0x110e <select_next_channel_to_measure+0x62>
    1104:	10 92 7f 3e 	sts	0x3E7F, r1	; 0x803e7f <current_measure_channel>
    1108:	10 92 80 3e 	sts	0x3E80, r1	; 0x803e80 <current_measure_channel+0x1>
    110c:	81 e0       	ldi	r24, 0x01	; 1
    110e:	df 91       	pop	r29
    1110:	cf 91       	pop	r28
    1112:	08 95       	ret

Disassembly of section .text.check_for_aks_block:

00000da6 <check_for_aks_block>:
 da6:	cf 92       	push	r12
 da8:	df 92       	push	r13
 daa:	ff 92       	push	r15
 dac:	0f 93       	push	r16
 dae:	1f 93       	push	r17
 db0:	cf 93       	push	r28
 db2:	df 93       	push	r29
 db4:	ec 01       	movw	r28, r24
 db6:	ae 81       	ldd	r26, Y+6	; 0x06
 db8:	bf 81       	ldd	r27, Y+7	; 0x07
 dba:	fb 01       	movw	r30, r22
 dbc:	ee 0f       	add	r30, r30
 dbe:	ff 1f       	adc	r31, r31
 dc0:	e6 0f       	add	r30, r22
 dc2:	f7 1f       	adc	r31, r23
 dc4:	8f 01       	movw	r16, r30
 dc6:	0a 0f       	add	r16, r26
 dc8:	1b 1f       	adc	r17, r27
 dca:	f8 01       	movw	r30, r16
 dcc:	f2 80       	ldd	r15, Z+2	; 0x02
 dce:	4c 81       	ldd	r20, Y+4	; 0x04
 dd0:	5d 81       	ldd	r21, Y+5	; 0x05
 dd2:	c6 e0       	ldi	r28, 0x06	; 6
 dd4:	c6 9f       	mul	r28, r22
 dd6:	90 01       	movw	r18, r0
 dd8:	c7 9f       	mul	r28, r23
 dda:	30 0d       	add	r19, r0
 ddc:	11 24       	eor	r1, r1
 dde:	ea 01       	movw	r28, r20
 de0:	c2 0f       	add	r28, r18
 de2:	d3 1f       	adc	r29, r19
 de4:	2a 81       	ldd	r18, Y+2	; 0x02
 de6:	3b 81       	ldd	r19, Y+3	; 0x03
 de8:	f9 01       	movw	r30, r18
 dea:	21 81       	ldd	r18, Z+1	; 0x01
 dec:	32 81       	ldd	r19, Z+2	; 0x02
 dee:	0c 80       	ldd	r0, Y+4	; 0x04
 df0:	dd 81       	ldd	r29, Y+5	; 0x05
 df2:	c0 2d       	mov	r28, r0
 df4:	2c 1b       	sub	r18, r28
 df6:	3d 0b       	sbc	r19, r29
 df8:	e8 01       	movw	r28, r16
 dfa:	e8 81       	ld	r30, Y
 dfc:	2e 1b       	sub	r18, r30
 dfe:	31 09       	sbc	r19, r1
 e00:	ec 01       	movw	r28, r24
 e02:	ea 81       	ldd	r30, Y+2	; 0x02
 e04:	fb 81       	ldd	r31, Y+3	; 0x03
 e06:	00 81       	ld	r16, Z
 e08:	11 81       	ldd	r17, Z+1	; 0x01
 e0a:	6d 01       	movw	r12, r26
 e0c:	fa 01       	movw	r30, r20
 e0e:	40 e0       	ldi	r20, 0x00	; 0
 e10:	50 e0       	ldi	r21, 0x00	; 0
 e12:	40 17       	cp	r20, r16
 e14:	51 07       	cpc	r21, r17
 e16:	49 f1       	breq	.+82     	; 0xe6a <check_for_aks_block+0xc4>
 e18:	46 17       	cp	r20, r22
 e1a:	57 07       	cpc	r21, r23
 e1c:	f9 f0       	breq	.+62     	; 0xe5c <check_for_aks_block+0xb6>
 e1e:	e6 01       	movw	r28, r12
 e20:	8a 81       	ldd	r24, Y+2	; 0x02
 e22:	f8 12       	cpse	r15, r24
 e24:	1b c0       	rjmp	.+54     	; 0xe5c <check_for_aks_block+0xb6>
 e26:	80 81       	ld	r24, Z
 e28:	85 58       	subi	r24, 0x85	; 133
 e2a:	82 30       	cpi	r24, 0x02	; 2
 e2c:	00 f1       	brcs	.+64     	; 0xe6e <check_for_aks_block+0xc8>
 e2e:	a4 81       	ldd	r26, Z+4	; 0x04
 e30:	b5 81       	ldd	r27, Z+5	; 0x05
 e32:	82 81       	ldd	r24, Z+2	; 0x02
 e34:	93 81       	ldd	r25, Z+3	; 0x03
 e36:	ec 01       	movw	r28, r24
 e38:	89 81       	ldd	r24, Y+1	; 0x01
 e3a:	9a 81       	ldd	r25, Y+2	; 0x02
 e3c:	a8 17       	cp	r26, r24
 e3e:	b9 07       	cpc	r27, r25
 e40:	68 f4       	brcc	.+26     	; 0xe5c <check_for_aks_block+0xb6>
 e42:	8a 1b       	sub	r24, r26
 e44:	9b 0b       	sbc	r25, r27
 e46:	e6 01       	movw	r28, r12
 e48:	a8 81       	ld	r26, Y
 e4a:	b0 e0       	ldi	r27, 0x00	; 0
 e4c:	a8 17       	cp	r26, r24
 e4e:	b9 07       	cpc	r27, r25
 e50:	28 f4       	brcc	.+10     	; 0xe5c <check_for_aks_block+0xb6>
 e52:	8a 1b       	sub	r24, r26
 e54:	9b 0b       	sbc	r25, r27
 e56:	28 17       	cp	r18, r24
 e58:	39 07       	cpc	r19, r25
 e5a:	48 f0       	brcs	.+18     	; 0xe6e <check_for_aks_block+0xc8>
 e5c:	4f 5f       	subi	r20, 0xFF	; 255
 e5e:	5f 4f       	sbci	r21, 0xFF	; 255
 e60:	d3 e0       	ldi	r29, 0x03	; 3
 e62:	cd 0e       	add	r12, r29
 e64:	d1 1c       	adc	r13, r1
 e66:	36 96       	adiw	r30, 0x06	; 6
 e68:	d4 cf       	rjmp	.-88     	; 0xe12 <check_for_aks_block+0x6c>
 e6a:	80 e0       	ldi	r24, 0x00	; 0
 e6c:	01 c0       	rjmp	.+2      	; 0xe70 <check_for_aks_block+0xca>
 e6e:	81 e0       	ldi	r24, 0x01	; 1
 e70:	df 91       	pop	r29
 e72:	cf 91       	pop	r28
 e74:	1f 91       	pop	r17
 e76:	0f 91       	pop	r16
 e78:	ff 90       	pop	r15
 e7a:	df 90       	pop	r13
 e7c:	cf 90       	pop	r12
 e7e:	08 95       	ret

Disassembly of section .text.qtm_t81x_ptc_handler_eoc:

000011d2 <qtm_t81x_ptc_handler_eoc>:
    11d2:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__RODATA_PM_OFFSET__+0x7f8600>
    11d6:	40 91 10 06 	lds	r20, 0x0610	; 0x800610 <__RODATA_PM_OFFSET__+0x7f8610>
    11da:	50 91 11 06 	lds	r21, 0x0611	; 0x800611 <__RODATA_PM_OFFSET__+0x7f8611>
    11de:	80 91 7f 3e 	lds	r24, 0x3E7F	; 0x803e7f <current_measure_channel>
    11e2:	90 91 80 3e 	lds	r25, 0x3E80	; 0x803e80 <current_measure_channel+0x1>
    11e6:	9c 01       	movw	r18, r24
    11e8:	22 0f       	add	r18, r18
    11ea:	33 1f       	adc	r19, r19
    11ec:	e0 91 81 3e 	lds	r30, 0x3E81	; 0x803e81 <qtm_raw_data_measurements_ptr>
    11f0:	f0 91 82 3e 	lds	r31, 0x3E82	; 0x803e82 <qtm_raw_data_measurements_ptr+0x1>
    11f4:	e2 0f       	add	r30, r18
    11f6:	f3 1f       	adc	r31, r19
    11f8:	40 83       	st	Z, r20
    11fa:	51 83       	std	Z+1, r21	; 0x01
    11fc:	01 96       	adiw	r24, 0x01	; 1
    11fe:	80 93 7f 3e 	sts	0x3E7F, r24	; 0x803e7f <current_measure_channel>
    1202:	90 93 80 3e 	sts	0x3E80, r25	; 0x803e80 <current_measure_channel+0x1>
    1206:	52 df       	rcall	.-348    	; 0x10ac <select_next_channel_to_measure>
    1208:	81 11       	cpse	r24, r1
    120a:	09 c0       	rjmp	.+18     	; 0x121e <qtm_t81x_ptc_handler_eoc+0x4c>
    120c:	84 e0       	ldi	r24, 0x04	; 4
    120e:	80 93 89 3e 	sts	0x3E89, r24	; 0x803e89 <touch_seq_lib_state>
    1212:	80 91 7f 3e 	lds	r24, 0x3E7F	; 0x803e7f <current_measure_channel>
    1216:	90 91 80 3e 	lds	r25, 0x3E80	; 0x803e80 <current_measure_channel+0x1>
    121a:	ca dc       	rcall	.-1644   	; 0xbb0 <qtm_measure_node>
    121c:	08 95       	ret
    121e:	e0 91 7d 3e 	lds	r30, 0x3E7D	; 0x803e7d <ptc_seq_measure_complete_pointer>
    1222:	f0 91 7e 3e 	lds	r31, 0x3E7E	; 0x803e7e <ptc_seq_measure_complete_pointer+0x1>
    1226:	09 95       	icall
    1228:	08 95       	ret

Disassembly of section .text.qtm_calibrate_sensor_node:

00000f4c <qtm_calibrate_sensor_node>:
 f4c:	cf 93       	push	r28
 f4e:	df 93       	push	r29
 f50:	fc 01       	movw	r30, r24
 f52:	89 2b       	or	r24, r25
 f54:	c9 f1       	breq	.+114    	; 0xfc8 <qtm_calibrate_sensor_node+0x7c>
 f56:	c0 81       	ld	r28, Z
 f58:	d1 81       	ldd	r29, Z+1	; 0x01
 f5a:	88 81       	ld	r24, Y
 f5c:	99 81       	ldd	r25, Y+1	; 0x01
 f5e:	86 17       	cp	r24, r22
 f60:	97 07       	cpc	r25, r23
 f62:	a0 f1       	brcs	.+104    	; 0xfcc <qtm_calibrate_sensor_node+0x80>
 f64:	9a 81       	ldd	r25, Y+2	; 0x02
 f66:	04 80       	ldd	r0, Z+4	; 0x04
 f68:	f5 81       	ldd	r31, Z+5	; 0x05
 f6a:	e0 2d       	mov	r30, r0
 f6c:	90 34       	cpi	r25, 0x40	; 64
 f6e:	71 f4       	brne	.+28     	; 0xf8c <qtm_calibrate_sensor_node+0x40>
 f70:	85 e0       	ldi	r24, 0x05	; 5
 f72:	86 9f       	mul	r24, r22
 f74:	e0 01       	movw	r28, r0
 f76:	87 9f       	mul	r24, r23
 f78:	d0 0d       	add	r29, r0
 f7a:	11 24       	eor	r1, r1
 f7c:	ce 0f       	add	r28, r30
 f7e:	df 1f       	adc	r29, r31
 f80:	84 e3       	ldi	r24, 0x34	; 52
 f82:	92 e0       	ldi	r25, 0x02	; 2
 f84:	8b 83       	std	Y+3, r24	; 0x03
 f86:	9c 83       	std	Y+4, r25	; 0x04
 f88:	80 e0       	ldi	r24, 0x00	; 0
 f8a:	12 c0       	rjmp	.+36     	; 0xfb0 <qtm_calibrate_sensor_node+0x64>
 f8c:	90 58       	subi	r25, 0x80	; 128
 f8e:	92 30       	cpi	r25, 0x02	; 2
 f90:	70 f4       	brcc	.+28     	; 0xfae <qtm_calibrate_sensor_node+0x62>
 f92:	85 e0       	ldi	r24, 0x05	; 5
 f94:	86 9f       	mul	r24, r22
 f96:	e0 01       	movw	r28, r0
 f98:	87 9f       	mul	r24, r23
 f9a:	d0 0d       	add	r29, r0
 f9c:	11 24       	eor	r1, r1
 f9e:	ce 0f       	add	r28, r30
 fa0:	df 1f       	adc	r29, r31
 fa2:	87 e6       	ldi	r24, 0x67	; 103
 fa4:	95 e0       	ldi	r25, 0x05	; 5
 fa6:	8b 83       	std	Y+3, r24	; 0x03
 fa8:	9c 83       	std	Y+4, r25	; 0x04
 faa:	80 e0       	ldi	r24, 0x00	; 0
 fac:	01 c0       	rjmp	.+2      	; 0xfb0 <qtm_calibrate_sensor_node+0x64>
 fae:	82 e0       	ldi	r24, 0x02	; 2
 fb0:	95 e0       	ldi	r25, 0x05	; 5
 fb2:	96 9f       	mul	r25, r22
 fb4:	90 01       	movw	r18, r0
 fb6:	97 9f       	mul	r25, r23
 fb8:	30 0d       	add	r19, r0
 fba:	11 24       	eor	r1, r1
 fbc:	e2 0f       	add	r30, r18
 fbe:	f3 1f       	adc	r31, r19
 fc0:	90 81       	ld	r25, Z
 fc2:	92 60       	ori	r25, 0x02	; 2
 fc4:	90 83       	st	Z, r25
 fc6:	03 c0       	rjmp	.+6      	; 0xfce <qtm_calibrate_sensor_node+0x82>
 fc8:	8b e0       	ldi	r24, 0x0B	; 11
 fca:	01 c0       	rjmp	.+2      	; 0xfce <qtm_calibrate_sensor_node+0x82>
 fcc:	82 e0       	ldi	r24, 0x02	; 2
 fce:	df 91       	pop	r29
 fd0:	cf 91       	pop	r28
 fd2:	08 95       	ret

Disassembly of section .text.qtm_enable_sensor_node:

00001300 <qtm_enable_sensor_node>:
    1300:	cf 93       	push	r28
    1302:	df 93       	push	r29
    1304:	00 97       	sbiw	r24, 0x00	; 0
    1306:	b9 f0       	breq	.+46     	; 0x1336 <qtm_enable_sensor_node+0x36>
    1308:	dc 01       	movw	r26, r24
    130a:	ed 91       	ld	r30, X+
    130c:	fc 91       	ld	r31, X
    130e:	20 81       	ld	r18, Z
    1310:	31 81       	ldd	r19, Z+1	; 0x01
    1312:	26 17       	cp	r18, r22
    1314:	37 07       	cpc	r19, r23
    1316:	88 f0       	brcs	.+34     	; 0x133a <qtm_enable_sensor_node+0x3a>
    1318:	45 e0       	ldi	r20, 0x05	; 5
    131a:	46 9f       	mul	r20, r22
    131c:	90 01       	movw	r18, r0
    131e:	47 9f       	mul	r20, r23
    1320:	30 0d       	add	r19, r0
    1322:	11 24       	eor	r1, r1
    1324:	ec 01       	movw	r28, r24
    1326:	ec 81       	ldd	r30, Y+4	; 0x04
    1328:	fd 81       	ldd	r31, Y+5	; 0x05
    132a:	e2 0f       	add	r30, r18
    132c:	f3 1f       	adc	r31, r19
    132e:	81 e0       	ldi	r24, 0x01	; 1
    1330:	80 83       	st	Z, r24
    1332:	80 e0       	ldi	r24, 0x00	; 0
    1334:	03 c0       	rjmp	.+6      	; 0x133c <qtm_enable_sensor_node+0x3c>
    1336:	8b e0       	ldi	r24, 0x0B	; 11
    1338:	01 c0       	rjmp	.+2      	; 0x133c <qtm_enable_sensor_node+0x3c>
    133a:	82 e0       	ldi	r24, 0x02	; 2
    133c:	df 91       	pop	r29
    133e:	cf 91       	pop	r28
    1340:	08 95       	ret

Disassembly of section .text.qtm_ptc_start_measurement_seq:

00000e80 <qtm_ptc_start_measurement_seq>:
 e80:	61 15       	cp	r22, r1
 e82:	71 05       	cpc	r23, r1
 e84:	b1 f1       	breq	.+108    	; 0xef2 <qtm_ptc_start_measurement_seq+0x72>
 e86:	00 97       	sbiw	r24, 0x00	; 0
 e88:	a1 f1       	breq	.+104    	; 0xef2 <qtm_ptc_start_measurement_seq+0x72>
 e8a:	20 91 89 3e 	lds	r18, 0x3E89	; 0x803e89 <touch_seq_lib_state>
 e8e:	22 23       	and	r18, r18
 e90:	91 f1       	breq	.+100    	; 0xef6 <qtm_ptc_start_measurement_seq+0x76>
 e92:	24 30       	cpi	r18, 0x04	; 4
 e94:	91 f1       	breq	.+100    	; 0xefa <qtm_ptc_start_measurement_seq+0x7a>
 e96:	80 93 7b 3e 	sts	0x3E7B, r24	; 0x803e7b <qtm_acquisition_control_working_set_ptr>
 e9a:	90 93 7c 3e 	sts	0x3E7C, r25	; 0x803e7c <qtm_acquisition_control_working_set_ptr+0x1>
 e9e:	60 93 7d 3e 	sts	0x3E7D, r22	; 0x803e7d <ptc_seq_measure_complete_pointer>
 ea2:	70 93 7e 3e 	sts	0x3E7E, r23	; 0x803e7e <ptc_seq_measure_complete_pointer+0x1>
 ea6:	20 ec       	ldi	r18, 0xC0	; 192
 ea8:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <__RODATA_PM_OFFSET__+0x7f8618>
 eac:	dc 01       	movw	r26, r24
 eae:	ed 91       	ld	r30, X+
 eb0:	fc 91       	ld	r31, X
 eb2:	22 81       	ldd	r18, Z+2	; 0x02
 eb4:	20 34       	cpi	r18, 0x40	; 64
 eb6:	41 f4       	brne	.+16     	; 0xec8 <qtm_ptc_start_measurement_seq+0x48>
 eb8:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <__RODATA_PM_OFFSET__+0x7f8618>
 ebc:	20 62       	ori	r18, 0x20	; 32
 ebe:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <__RODATA_PM_OFFSET__+0x7f8618>
 ec2:	10 92 1e 06 	sts	0x061E, r1	; 0x80061e <__RODATA_PM_OFFSET__+0x7f861e>
 ec6:	1d c0       	rjmp	.+58     	; 0xf02 <qtm_ptc_start_measurement_seq+0x82>
 ec8:	20 38       	cpi	r18, 0x80	; 128
 eca:	41 f4       	brne	.+16     	; 0xedc <qtm_ptc_start_measurement_seq+0x5c>
 ecc:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <__RODATA_PM_OFFSET__+0x7f8618>
 ed0:	28 62       	ori	r18, 0x28	; 40
 ed2:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <__RODATA_PM_OFFSET__+0x7f8618>
 ed6:	10 92 1e 06 	sts	0x061E, r1	; 0x80061e <__RODATA_PM_OFFSET__+0x7f861e>
 eda:	13 c0       	rjmp	.+38     	; 0xf02 <qtm_ptc_start_measurement_seq+0x82>
 edc:	21 38       	cpi	r18, 0x81	; 129
 ede:	79 f4       	brne	.+30     	; 0xefe <qtm_ptc_start_measurement_seq+0x7e>
 ee0:	20 91 18 06 	lds	r18, 0x0618	; 0x800618 <__RODATA_PM_OFFSET__+0x7f8618>
 ee4:	28 62       	ori	r18, 0x28	; 40
 ee6:	20 93 18 06 	sts	0x0618, r18	; 0x800618 <__RODATA_PM_OFFSET__+0x7f8618>
 eea:	26 e8       	ldi	r18, 0x86	; 134
 eec:	20 93 1e 06 	sts	0x061E, r18	; 0x80061e <__RODATA_PM_OFFSET__+0x7f861e>
 ef0:	08 c0       	rjmp	.+16     	; 0xf02 <qtm_ptc_start_measurement_seq+0x82>
 ef2:	8b e0       	ldi	r24, 0x0B	; 11
 ef4:	08 95       	ret
 ef6:	83 e0       	ldi	r24, 0x03	; 3
 ef8:	08 95       	ret
 efa:	81 e0       	ldi	r24, 0x01	; 1
 efc:	08 95       	ret
 efe:	82 e0       	ldi	r24, 0x02	; 2
 f00:	08 95       	ret
 f02:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__RODATA_PM_OFFSET__+0x7f8600>
 f06:	dc 01       	movw	r26, r24
 f08:	ed 91       	ld	r30, X+
 f0a:	fc 91       	ld	r31, X
 f0c:	84 81       	ldd	r24, Z+4	; 0x04
 f0e:	80 31       	cpi	r24, 0x10	; 16
 f10:	08 f0       	brcs	.+2      	; 0xf14 <qtm_ptc_start_measurement_seq+0x94>
 f12:	80 e1       	ldi	r24, 0x10	; 16
 f14:	80 93 03 06 	sts	0x0603, r24	; 0x800603 <__RODATA_PM_OFFSET__+0x7f8603>
 f18:	81 e0       	ldi	r24, 0x01	; 1
 f1a:	80 93 0b 06 	sts	0x060B, r24	; 0x80060b <__RODATA_PM_OFFSET__+0x7f860b>
 f1e:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__RODATA_PM_OFFSET__+0x7f860a>
 f22:	10 92 7f 3e 	sts	0x3E7F, r1	; 0x803e7f <current_measure_channel>
 f26:	10 92 80 3e 	sts	0x3E80, r1	; 0x803e80 <current_measure_channel+0x1>
 f2a:	c0 d0       	rcall	.+384    	; 0x10ac <select_next_channel_to_measure>
 f2c:	81 11       	cpse	r24, r1
 f2e:	0a c0       	rjmp	.+20     	; 0xf44 <qtm_ptc_start_measurement_seq+0xc4>
 f30:	84 e0       	ldi	r24, 0x04	; 4
 f32:	80 93 89 3e 	sts	0x3E89, r24	; 0x803e89 <touch_seq_lib_state>
 f36:	80 91 7f 3e 	lds	r24, 0x3E7F	; 0x803e7f <current_measure_channel>
 f3a:	90 91 80 3e 	lds	r25, 0x3E80	; 0x803e80 <current_measure_channel+0x1>
 f3e:	38 de       	rcall	.-912    	; 0xbb0 <qtm_measure_node>
 f40:	80 e0       	ldi	r24, 0x00	; 0
 f42:	08 95       	ret
 f44:	82 e0       	ldi	r24, 0x02	; 2
 f46:	80 93 89 3e 	sts	0x3E89, r24	; 0x803e89 <touch_seq_lib_state>
 f4a:	08 95       	ret

Disassembly of section .text.qtm_ptc_qtlib_assign_signal_memory:

0000158c <qtm_ptc_qtlib_assign_signal_memory>:
    158c:	00 97       	sbiw	r24, 0x00	; 0
    158e:	31 f0       	breq	.+12     	; 0x159c <qtm_ptc_qtlib_assign_signal_memory+0x10>
    1590:	80 93 81 3e 	sts	0x3E81, r24	; 0x803e81 <qtm_raw_data_measurements_ptr>
    1594:	90 93 82 3e 	sts	0x3E82, r25	; 0x803e82 <qtm_raw_data_measurements_ptr+0x1>
    1598:	80 e0       	ldi	r24, 0x00	; 0
    159a:	08 95       	ret
    159c:	8b e0       	ldi	r24, 0x0B	; 11
    159e:	08 95       	ret

Disassembly of section .text.qtm_ptc_init_acquisition_module:

00000fd4 <qtm_ptc_init_acquisition_module>:
     fd4:	cf 93       	push	r28
     fd6:	df 93       	push	r29
     fd8:	ec 01       	movw	r28, r24
     fda:	89 2b       	or	r24, r25
     fdc:	69 f1       	breq	.+90     	; 0x1038 <qtm_ptc_init_acquisition_module+0x64>
     fde:	e8 81       	ld	r30, Y
     fe0:	f9 81       	ldd	r31, Y+1	; 0x01
     fe2:	60 81       	ld	r22, Z
     fe4:	71 81       	ldd	r23, Z+1	; 0x01
     fe6:	40 e0       	ldi	r20, 0x00	; 0
     fe8:	50 e0       	ldi	r21, 0x00	; 0
     fea:	20 e0       	ldi	r18, 0x00	; 0
     fec:	30 e0       	ldi	r19, 0x00	; 0
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	26 17       	cp	r18, r22
     ff2:	37 07       	cpc	r19, r23
     ff4:	69 f0       	breq	.+26     	; 0x1010 <qtm_ptc_init_acquisition_module+0x3c>
     ff6:	ea 81       	ldd	r30, Y+2	; 0x02
     ff8:	fb 81       	ldd	r31, Y+3	; 0x03
     ffa:	e4 0f       	add	r30, r20
     ffc:	f5 1f       	adc	r31, r21
     ffe:	a0 81       	ld	r26, Z
    1000:	81 81       	ldd	r24, Z+1	; 0x01
    1002:	8a 2b       	or	r24, r26
    1004:	98 2b       	or	r25, r24
    1006:	2f 5f       	subi	r18, 0xFF	; 255
    1008:	3f 4f       	sbci	r19, 0xFF	; 255
    100a:	4a 5f       	subi	r20, 0xFA	; 250
    100c:	5f 4f       	sbci	r21, 0xFF	; 255
    100e:	f0 cf       	rjmp	.-32     	; 0xff0 <qtm_ptc_init_acquisition_module+0x1c>
    1010:	99 23       	and	r25, r25
    1012:	a1 f0       	breq	.+40     	; 0x103c <qtm_ptc_init_acquisition_module+0x68>
    1014:	80 91 89 3e 	lds	r24, 0x3E89	; 0x803e89 <touch_seq_lib_state>
    1018:	81 11       	cpse	r24, r1
    101a:	07 c0       	rjmp	.+14     	; 0x102a <qtm_ptc_init_acquisition_module+0x56>
    101c:	90 93 22 06 	sts	0x0622, r25	; 0x800622 <__RODATA_PM_OFFSET__+0x7f8622>
    1020:	81 e0       	ldi	r24, 0x01	; 1
    1022:	80 93 89 3e 	sts	0x3E89, r24	; 0x803e89 <touch_seq_lib_state>
    1026:	80 e0       	ldi	r24, 0x00	; 0
    1028:	0a c0       	rjmp	.+20     	; 0x103e <qtm_ptc_init_acquisition_module+0x6a>
    102a:	80 91 22 06 	lds	r24, 0x0622	; 0x800622 <__RODATA_PM_OFFSET__+0x7f8622>
    102e:	98 2b       	or	r25, r24
    1030:	90 93 22 06 	sts	0x0622, r25	; 0x800622 <__RODATA_PM_OFFSET__+0x7f8622>
    1034:	80 e0       	ldi	r24, 0x00	; 0
    1036:	03 c0       	rjmp	.+6      	; 0x103e <qtm_ptc_init_acquisition_module+0x6a>
    1038:	8b e0       	ldi	r24, 0x0B	; 11
    103a:	01 c0       	rjmp	.+2      	; 0x103e <qtm_ptc_init_acquisition_module+0x6a>
    103c:	82 e0       	ldi	r24, 0x02	; 2
    103e:	df 91       	pop	r29
    1040:	cf 91       	pop	r28
    1042:	08 95       	ret

Disassembly of section .text.qtm_acquisition_process:

000008ba <qtm_acquisition_process>:
 8ba:	a4 e0       	ldi	r26, 0x04	; 4
 8bc:	b0 e0       	ldi	r27, 0x00	; 0
 8be:	e2 e6       	ldi	r30, 0x62	; 98
 8c0:	f4 e0       	ldi	r31, 0x04	; 4
 8c2:	94 c5       	rjmp	.+2856   	; 0x13ec <__prologue_saves__+0x2>
 8c4:	80 91 89 3e 	lds	r24, 0x3E89	; 0x803e89 <touch_seq_lib_state>
 8c8:	88 23       	and	r24, r24
 8ca:	09 f4       	brne	.+2      	; 0x8ce <qtm_acquisition_process+0x14>
 8cc:	60 c1       	rjmp	.+704    	; 0xb8e <qtm_acquisition_process+0x2d4>
 8ce:	40 91 7b 3e 	lds	r20, 0x3E7B	; 0x803e7b <qtm_acquisition_control_working_set_ptr>
 8d2:	50 91 7c 3e 	lds	r21, 0x3E7C	; 0x803e7c <qtm_acquisition_control_working_set_ptr+0x1>
 8d6:	4b 83       	std	Y+3, r20	; 0x03
 8d8:	5c 83       	std	Y+4, r21	; 0x04
 8da:	e0 90 81 3e 	lds	r14, 0x3E81	; 0x803e81 <qtm_raw_data_measurements_ptr>
 8de:	f0 90 82 3e 	lds	r15, 0x3E82	; 0x803e82 <qtm_raw_data_measurements_ptr+0x1>
 8e2:	a0 e0       	ldi	r26, 0x00	; 0
 8e4:	b0 e0       	ldi	r27, 0x00	; 0
 8e6:	60 e0       	ldi	r22, 0x00	; 0
 8e8:	70 e0       	ldi	r23, 0x00	; 0
 8ea:	00 e0       	ldi	r16, 0x00	; 0
 8ec:	10 e0       	ldi	r17, 0x00	; 0
 8ee:	80 e0       	ldi	r24, 0x00	; 0
 8f0:	33 24       	eor	r3, r3
 8f2:	33 94       	inc	r3
 8f4:	f1 e8       	ldi	r31, 0x81	; 129
 8f6:	4f 2e       	mov	r4, r31
 8f8:	88 24       	eor	r8, r8
 8fa:	8a 94       	dec	r8
 8fc:	99 24       	eor	r9, r9
 8fe:	93 94       	inc	r9
 900:	eb 81       	ldd	r30, Y+3	; 0x03
 902:	fc 81       	ldd	r31, Y+4	; 0x04
 904:	40 81       	ld	r20, Z
 906:	51 81       	ldd	r21, Z+1	; 0x01
 908:	fa 01       	movw	r30, r20
 90a:	20 81       	ld	r18, Z
 90c:	31 81       	ldd	r19, Z+1	; 0x01
 90e:	02 17       	cp	r16, r18
 910:	13 07       	cpc	r17, r19
 912:	08 f0       	brcs	.+2      	; 0x916 <qtm_acquisition_process+0x5c>
 914:	38 c1       	rjmp	.+624    	; 0xb86 <qtm_acquisition_process+0x2cc>
 916:	f7 01       	movw	r30, r14
 918:	21 91       	ld	r18, Z+
 91a:	31 91       	ld	r19, Z+
 91c:	7f 01       	movw	r14, r30
 91e:	eb 81       	ldd	r30, Y+3	; 0x03
 920:	fc 81       	ldd	r31, Y+4	; 0x04
 922:	c4 80       	ldd	r12, Z+4	; 0x04
 924:	d5 80       	ldd	r13, Z+5	; 0x05
 926:	f6 01       	movw	r30, r12
 928:	e6 0f       	add	r30, r22
 92a:	f7 1f       	adc	r31, r23
 92c:	e9 83       	std	Y+1, r30	; 0x01
 92e:	fa 83       	std	Y+2, r31	; 0x02
 930:	90 81       	ld	r25, Z
 932:	9c 71       	andi	r25, 0x1C	; 28
 934:	c9 2e       	mov	r12, r25
 936:	d1 2c       	mov	r13, r1
 938:	d6 94       	lsr	r13
 93a:	c7 94       	ror	r12
 93c:	d6 94       	lsr	r13
 93e:	c7 94       	ror	r12
 940:	c1 14       	cp	r12, r1
 942:	d1 04       	cpc	r13, r1
 944:	21 f0       	breq	.+8      	; 0x94e <qtm_acquisition_process+0x94>
 946:	ca 94       	dec	r12
 948:	cd 28       	or	r12, r13
 94a:	d9 f0       	breq	.+54     	; 0x982 <qtm_acquisition_process+0xc8>
 94c:	15 c1       	rjmp	.+554    	; 0xb78 <qtm_acquisition_process+0x2be>
 94e:	eb 81       	ldd	r30, Y+3	; 0x03
 950:	fc 81       	ldd	r31, Y+4	; 0x04
 952:	42 81       	ldd	r20, Z+2	; 0x02
 954:	53 81       	ldd	r21, Z+3	; 0x03
 956:	4a 0f       	add	r20, r26
 958:	5b 1f       	adc	r21, r27
 95a:	fa 01       	movw	r30, r20
 95c:	94 81       	ldd	r25, Z+4	; 0x04
 95e:	9f 70       	andi	r25, 0x0F	; 15
 960:	d9 2e       	mov	r13, r25
 962:	95 81       	ldd	r25, Z+5	; 0x05
 964:	d9 16       	cp	r13, r25
 966:	10 f4       	brcc	.+4      	; 0x96c <qtm_acquisition_process+0xb2>
 968:	9d 19       	sub	r25, r13
 96a:	01 c0       	rjmp	.+2      	; 0x96e <qtm_acquisition_process+0xb4>
 96c:	90 e0       	ldi	r25, 0x00	; 0
 96e:	02 c0       	rjmp	.+4      	; 0x974 <qtm_acquisition_process+0xba>
 970:	36 95       	lsr	r19
 972:	27 95       	ror	r18
 974:	9a 95       	dec	r25
 976:	e2 f7       	brpl	.-8      	; 0x970 <qtm_acquisition_process+0xb6>
 978:	e9 81       	ldd	r30, Y+1	; 0x01
 97a:	fa 81       	ldd	r31, Y+2	; 0x02
 97c:	21 83       	std	Z+1, r18	; 0x01
 97e:	32 83       	std	Z+2, r19	; 0x02
 980:	fc c0       	rjmp	.+504    	; 0xb7a <qtm_acquisition_process+0x2c0>
 982:	eb 81       	ldd	r30, Y+3	; 0x03
 984:	fc 81       	ldd	r31, Y+4	; 0x04
 986:	c2 80       	ldd	r12, Z+2	; 0x02
 988:	d3 80       	ldd	r13, Z+3	; 0x03
 98a:	ca 0e       	add	r12, r26
 98c:	db 1e       	adc	r13, r27
 98e:	f6 01       	movw	r30, r12
 990:	05 80       	ldd	r0, Z+5	; 0x05
 992:	02 c0       	rjmp	.+4      	; 0x998 <qtm_acquisition_process+0xde>
 994:	36 95       	lsr	r19
 996:	27 95       	ror	r18
 998:	0a 94       	dec	r0
 99a:	e2 f7       	brpl	.-8      	; 0x994 <qtm_acquisition_process+0xda>
 99c:	e9 81       	ldd	r30, Y+1	; 0x01
 99e:	fa 81       	ldd	r31, Y+2	; 0x02
 9a0:	21 83       	std	Z+1, r18	; 0x01
 9a2:	32 83       	std	Z+2, r19	; 0x02
 9a4:	a3 80       	ldd	r10, Z+3	; 0x03
 9a6:	b4 80       	ldd	r11, Z+4	; 0x04
 9a8:	21 15       	cp	r18, r1
 9aa:	f2 e0       	ldi	r31, 0x02	; 2
 9ac:	3f 07       	cpc	r19, r31
 9ae:	20 f0       	brcs	.+8      	; 0x9b8 <qtm_acquisition_process+0xfe>
 9b0:	2f 5f       	subi	r18, 0xFF	; 255
 9b2:	31 40       	sbci	r19, 0x01	; 1
 9b4:	91 e0       	ldi	r25, 0x01	; 1
 9b6:	05 c0       	rjmp	.+10     	; 0x9c2 <qtm_acquisition_process+0x108>
 9b8:	f4 01       	movw	r30, r8
 9ba:	e2 1b       	sub	r30, r18
 9bc:	f3 0b       	sbc	r31, r19
 9be:	9f 01       	movw	r18, r30
 9c0:	90 e0       	ldi	r25, 0x00	; 0
 9c2:	fa 01       	movw	r30, r20
 9c4:	52 80       	ldd	r5, Z+2	; 0x02
 9c6:	f0 e4       	ldi	r31, 0x40	; 64
 9c8:	5f 12       	cpse	r5, r31
 9ca:	05 c0       	rjmp	.+10     	; 0x9d6 <qtm_acquisition_process+0x11c>
 9cc:	36 95       	lsr	r19
 9ce:	27 95       	ror	r18
 9d0:	99 23       	and	r25, r25
 9d2:	19 f0       	breq	.+6      	; 0x9da <qtm_acquisition_process+0x120>
 9d4:	0b c0       	rjmp	.+22     	; 0x9ec <qtm_acquisition_process+0x132>
 9d6:	99 23       	and	r25, r25
 9d8:	49 f0       	breq	.+18     	; 0x9ec <qtm_acquisition_process+0x132>
 9da:	4f ef       	ldi	r20, 0xFF	; 255
 9dc:	a4 16       	cp	r10, r20
 9de:	b4 06       	cpc	r11, r20
 9e0:	41 f4       	brne	.+16     	; 0x9f2 <qtm_acquisition_process+0x138>
 9e2:	e9 81       	ldd	r30, Y+1	; 0x01
 9e4:	fa 81       	ldd	r31, Y+2	; 0x02
 9e6:	40 82       	st	Z, r4
 9e8:	8e e0       	ldi	r24, 0x0E	; 14
 9ea:	07 c0       	rjmp	.+14     	; 0x9fa <qtm_acquisition_process+0x140>
 9ec:	77 24       	eor	r7, r7
 9ee:	73 94       	inc	r7
 9f0:	01 c0       	rjmp	.+2      	; 0x9f4 <qtm_acquisition_process+0x13a>
 9f2:	71 2c       	mov	r7, r1
 9f4:	2a 30       	cpi	r18, 0x0A	; 10
 9f6:	31 05       	cpc	r19, r1
 9f8:	a0 f4       	brcc	.+40     	; 0xa22 <qtm_acquisition_process+0x168>
 9fa:	eb 81       	ldd	r30, Y+3	; 0x03
 9fc:	fc 81       	ldd	r31, Y+4	; 0x04
 9fe:	24 81       	ldd	r18, Z+4	; 0x04
 a00:	35 81       	ldd	r19, Z+5	; 0x05
 a02:	f9 01       	movw	r30, r18
 a04:	e6 0f       	add	r30, r22
 a06:	f7 1f       	adc	r31, r23
 a08:	90 81       	ld	r25, Z
 a0a:	97 ff       	sbrs	r25, 7
 a0c:	30 82       	st	Z, r3
 a0e:	eb 81       	ldd	r30, Y+3	; 0x03
 a10:	fc 81       	ldd	r31, Y+4	; 0x04
 a12:	24 81       	ldd	r18, Z+4	; 0x04
 a14:	35 81       	ldd	r19, Z+5	; 0x05
 a16:	f9 01       	movw	r30, r18
 a18:	e6 0f       	add	r30, r22
 a1a:	f7 1f       	adc	r31, r23
 a1c:	a3 82       	std	Z+3, r10	; 0x03
 a1e:	b4 82       	std	Z+4, r11	; 0x04
 a20:	ac c0       	rjmp	.+344    	; 0xb7a <qtm_acquisition_process+0x2c0>
 a22:	65 01       	movw	r12, r10
 a24:	cd 2c       	mov	r12, r13
 a26:	dd 24       	eor	r13, r13
 a28:	c2 94       	swap	r12
 a2a:	ef e0       	ldi	r30, 0x0F	; 15
 a2c:	ce 22       	and	r12, r30
 a2e:	9c 2d       	mov	r25, r12
 a30:	a5 01       	movw	r20, r10
 a32:	44 27       	eor	r20, r20
 a34:	5f 70       	andi	r21, 0x0F	; 15
 a36:	65 2e       	mov	r6, r21
 a38:	a5 01       	movw	r20, r10
 a3a:	40 7f       	andi	r20, 0xF0	; 240
 a3c:	55 27       	eor	r21, r21
 a3e:	f4 e0       	ldi	r31, 0x04	; 4
 a40:	56 95       	lsr	r21
 a42:	47 95       	ror	r20
 a44:	fa 95       	dec	r31
 a46:	e1 f7       	brne	.-8      	; 0xa40 <qtm_acquisition_process+0x186>
 a48:	fa 2d       	mov	r31, r10
 a4a:	ff 70       	andi	r31, 0x0F	; 15
 a4c:	af 2e       	mov	r10, r31
 a4e:	94 30       	cpi	r25, 0x04	; 4
 a50:	30 f0       	brcs	.+12     	; 0xa5e <qtm_acquisition_process+0x1a4>
 a52:	93 70       	andi	r25, 0x03	; 3
 a54:	d6 94       	lsr	r13
 a56:	c7 94       	ror	r12
 a58:	d6 94       	lsr	r13
 a5a:	c7 94       	ror	r12
 a5c:	9c 0d       	add	r25, r12
 a5e:	71 10       	cpse	r7, r1
 a60:	3c c0       	rjmp	.+120    	; 0xada <qtm_acquisition_process+0x220>
 a62:	50 e8       	ldi	r21, 0x80	; 128
 a64:	55 0d       	add	r21, r5
 a66:	52 30       	cpi	r21, 0x02	; 2
 a68:	10 f4       	brcc	.+4      	; 0xa6e <qtm_acquisition_process+0x1b4>
 a6a:	56 e0       	ldi	r21, 0x06	; 6
 a6c:	07 c0       	rjmp	.+14     	; 0xa7c <qtm_acquisition_process+0x1c2>
 a6e:	53 e0       	ldi	r21, 0x03	; 3
 a70:	05 c0       	rjmp	.+10     	; 0xa7c <qtm_acquisition_process+0x1c2>
 a72:	95 17       	cp	r25, r21
 a74:	68 f4       	brcc	.+26     	; 0xa90 <qtm_acquisition_process+0x1d6>
 a76:	9f 5f       	subi	r25, 0xFF	; 255
 a78:	2f 5c       	subi	r18, 0xCF	; 207
 a7a:	31 09       	sbc	r19, r1
 a7c:	20 3d       	cpi	r18, 0xD0	; 208
 a7e:	31 05       	cpc	r19, r1
 a80:	c0 f7       	brcc	.-16     	; 0xa72 <qtm_acquisition_process+0x1b8>
 a82:	06 c0       	rjmp	.+12     	; 0xa90 <qtm_acquisition_process+0x1d6>
 a84:	ef e0       	ldi	r30, 0x0F	; 15
 a86:	6e 16       	cp	r6, r30
 a88:	49 f0       	breq	.+18     	; 0xa9c <qtm_acquisition_process+0x1e2>
 a8a:	63 94       	inc	r6
 a8c:	25 51       	subi	r18, 0x15	; 21
 a8e:	31 09       	sbc	r19, r1
 a90:	26 31       	cpi	r18, 0x16	; 22
 a92:	31 05       	cpc	r19, r1
 a94:	b8 f7       	brcc	.-18     	; 0xa84 <qtm_acquisition_process+0x1ca>
 a96:	ff e0       	ldi	r31, 0x0F	; 15
 a98:	6f 12       	cpse	r6, r31
 a9a:	0e c0       	rjmp	.+28     	; 0xab8 <qtm_acquisition_process+0x1fe>
 a9c:	95 17       	cp	r25, r21
 a9e:	20 f4       	brcc	.+8      	; 0xaa8 <qtm_acquisition_process+0x1ee>
 aa0:	9f 5f       	subi	r25, 0xFF	; 255
 aa2:	f5 e0       	ldi	r31, 0x05	; 5
 aa4:	6f 2e       	mov	r6, r31
 aa6:	08 c0       	rjmp	.+16     	; 0xab8 <qtm_acquisition_process+0x1fe>
 aa8:	ef e0       	ldi	r30, 0x0F	; 15
 aaa:	6e 2e       	mov	r6, r30
 aac:	05 c0       	rjmp	.+10     	; 0xab8 <qtm_acquisition_process+0x1fe>
 aae:	4f 30       	cpi	r20, 0x0F	; 15
 ab0:	49 f0       	breq	.+18     	; 0xac4 <qtm_acquisition_process+0x20a>
 ab2:	4f 5f       	subi	r20, 0xFF	; 255
 ab4:	22 50       	subi	r18, 0x02	; 2
 ab6:	31 09       	sbc	r19, r1
 ab8:	23 30       	cpi	r18, 0x03	; 3
 aba:	31 05       	cpc	r19, r1
 abc:	c0 f7       	brcc	.-16     	; 0xaae <qtm_acquisition_process+0x1f4>
 abe:	4f 30       	cpi	r20, 0x0F	; 15
 ac0:	09 f0       	breq	.+2      	; 0xac4 <qtm_acquisition_process+0x20a>
 ac2:	6c c0       	rjmp	.+216    	; 0xb9c <qtm_acquisition_process+0x2e2>
 ac4:	4f e0       	ldi	r20, 0x0F	; 15
 ac6:	64 16       	cp	r6, r20
 ac8:	89 f1       	breq	.+98     	; 0xb2c <qtm_acquisition_process+0x272>
 aca:	63 94       	inc	r6
 acc:	45 e0       	ldi	r20, 0x05	; 5
 ace:	66 c0       	rjmp	.+204    	; 0xb9c <qtm_acquisition_process+0x2e2>
 ad0:	99 23       	and	r25, r25
 ad2:	61 f0       	breq	.+24     	; 0xaec <qtm_acquisition_process+0x232>
 ad4:	91 50       	subi	r25, 0x01	; 1
 ad6:	2f 5c       	subi	r18, 0xCF	; 207
 ad8:	31 09       	sbc	r19, r1
 ada:	20 3d       	cpi	r18, 0xD0	; 208
 adc:	31 05       	cpc	r19, r1
 ade:	c0 f7       	brcc	.-16     	; 0xad0 <qtm_acquisition_process+0x216>
 ae0:	05 c0       	rjmp	.+10     	; 0xaec <qtm_acquisition_process+0x232>
 ae2:	66 20       	and	r6, r6
 ae4:	41 f0       	breq	.+16     	; 0xaf6 <qtm_acquisition_process+0x23c>
 ae6:	6a 94       	dec	r6
 ae8:	25 51       	subi	r18, 0x15	; 21
 aea:	31 09       	sbc	r19, r1
 aec:	26 31       	cpi	r18, 0x16	; 22
 aee:	31 05       	cpc	r19, r1
 af0:	c0 f7       	brcc	.-16     	; 0xae2 <qtm_acquisition_process+0x228>
 af2:	61 10       	cpse	r6, r1
 af4:	0d c0       	rjmp	.+26     	; 0xb10 <qtm_acquisition_process+0x256>
 af6:	99 23       	and	r25, r25
 af8:	21 f0       	breq	.+8      	; 0xb02 <qtm_acquisition_process+0x248>
 afa:	91 50       	subi	r25, 0x01	; 1
 afc:	5a e0       	ldi	r21, 0x0A	; 10
 afe:	65 2e       	mov	r6, r21
 b00:	07 c0       	rjmp	.+14     	; 0xb10 <qtm_acquisition_process+0x256>
 b02:	61 2c       	mov	r6, r1
 b04:	05 c0       	rjmp	.+10     	; 0xb10 <qtm_acquisition_process+0x256>
 b06:	44 23       	and	r20, r20
 b08:	41 f0       	breq	.+16     	; 0xb1a <qtm_acquisition_process+0x260>
 b0a:	41 50       	subi	r20, 0x01	; 1
 b0c:	22 50       	subi	r18, 0x02	; 2
 b0e:	31 09       	sbc	r19, r1
 b10:	23 30       	cpi	r18, 0x03	; 3
 b12:	31 05       	cpc	r19, r1
 b14:	c0 f7       	brcc	.-16     	; 0xb06 <qtm_acquisition_process+0x24c>
 b16:	41 11       	cpse	r20, r1
 b18:	11 c0       	rjmp	.+34     	; 0xb3c <qtm_acquisition_process+0x282>
 b1a:	66 20       	and	r6, r6
 b1c:	09 f4       	brne	.+2      	; 0xb20 <qtm_acquisition_process+0x266>
 b1e:	43 c0       	rjmp	.+134    	; 0xba6 <qtm_acquisition_process+0x2ec>
 b20:	6a 94       	dec	r6
 b22:	4a e0       	ldi	r20, 0x0A	; 10
 b24:	23 30       	cpi	r18, 0x03	; 3
 b26:	31 05       	cpc	r19, r1
 b28:	c0 f6       	brcc	.-80     	; 0xada <qtm_acquisition_process+0x220>
 b2a:	08 c0       	rjmp	.+16     	; 0xb3c <qtm_acquisition_process+0x282>
 b2c:	59 13       	cpse	r21, r25
 b2e:	35 c0       	rjmp	.+106    	; 0xb9a <qtm_acquisition_process+0x2e0>
 b30:	23 30       	cpi	r18, 0x03	; 3
 b32:	31 05       	cpc	r19, r1
 b34:	70 f1       	brcs	.+92     	; 0xb92 <qtm_acquisition_process+0x2d8>
 b36:	ff e0       	ldi	r31, 0x0F	; 15
 b38:	af 2e       	mov	r10, r31
 b3a:	4f e0       	ldi	r20, 0x0F	; 15
 b3c:	94 30       	cpi	r25, 0x04	; 4
 b3e:	20 f0       	brcs	.+8      	; 0xb48 <qtm_acquisition_process+0x28e>
 b40:	93 50       	subi	r25, 0x03	; 3
 b42:	99 0f       	add	r25, r25
 b44:	99 0f       	add	r25, r25
 b46:	9d 5f       	subi	r25, 0xFD	; 253
 b48:	26 2d       	mov	r18, r6
 b4a:	30 e0       	ldi	r19, 0x00	; 0
 b4c:	32 2f       	mov	r19, r18
 b4e:	22 27       	eor	r18, r18
 b50:	e0 e1       	ldi	r30, 0x10	; 16
 b52:	4e 9f       	mul	r20, r30
 b54:	a0 01       	movw	r20, r0
 b56:	11 24       	eor	r1, r1
 b58:	42 2b       	or	r20, r18
 b5a:	53 2b       	or	r21, r19
 b5c:	4a 29       	or	r20, r10
 b5e:	29 2f       	mov	r18, r25
 b60:	30 e0       	ldi	r19, 0x00	; 0
 b62:	32 2f       	mov	r19, r18
 b64:	22 27       	eor	r18, r18
 b66:	32 95       	swap	r19
 b68:	30 7f       	andi	r19, 0xF0	; 240
 b6a:	42 2b       	or	r20, r18
 b6c:	53 2b       	or	r21, r19
 b6e:	e9 81       	ldd	r30, Y+1	; 0x01
 b70:	fa 81       	ldd	r31, Y+2	; 0x02
 b72:	43 83       	std	Z+3, r20	; 0x03
 b74:	54 83       	std	Z+4, r21	; 0x04
 b76:	01 c0       	rjmp	.+2      	; 0xb7a <qtm_acquisition_process+0x2c0>
 b78:	ff cf       	rjmp	.-2      	; 0xb78 <qtm_acquisition_process+0x2be>
 b7a:	0f 5f       	subi	r16, 0xFF	; 255
 b7c:	1f 4f       	sbci	r17, 0xFF	; 255
 b7e:	6b 5f       	subi	r22, 0xFB	; 251
 b80:	7f 4f       	sbci	r23, 0xFF	; 255
 b82:	16 96       	adiw	r26, 0x06	; 6
 b84:	bd ce       	rjmp	.-646    	; 0x900 <qtm_acquisition_process+0x46>
 b86:	92 e0       	ldi	r25, 0x02	; 2
 b88:	90 93 89 3e 	sts	0x3E89, r25	; 0x803e89 <touch_seq_lib_state>
 b8c:	0e c0       	rjmp	.+28     	; 0xbaa <qtm_acquisition_process+0x2f0>
 b8e:	83 e0       	ldi	r24, 0x03	; 3
 b90:	0c c0       	rjmp	.+24     	; 0xbaa <qtm_acquisition_process+0x2f0>
 b92:	4f e0       	ldi	r20, 0x0F	; 15
 b94:	2f e0       	ldi	r18, 0x0F	; 15
 b96:	a2 2e       	mov	r10, r18
 b98:	d1 cf       	rjmp	.-94     	; 0xb3c <qtm_acquisition_process+0x282>
 b9a:	4f e0       	ldi	r20, 0x0F	; 15
 b9c:	23 30       	cpi	r18, 0x03	; 3
 b9e:	31 05       	cpc	r19, r1
 ba0:	08 f0       	brcs	.+2      	; 0xba4 <qtm_acquisition_process+0x2ea>
 ba2:	6c cf       	rjmp	.-296    	; 0xa7c <qtm_acquisition_process+0x1c2>
 ba4:	cb cf       	rjmp	.-106    	; 0xb3c <qtm_acquisition_process+0x282>
 ba6:	40 e0       	ldi	r20, 0x00	; 0
 ba8:	c9 cf       	rjmp	.-110    	; 0xb3c <qtm_acquisition_process+0x282>
 baa:	24 96       	adiw	r28, 0x04	; 4
 bac:	e1 e1       	ldi	r30, 0x11	; 17
 bae:	37 c4       	rjmp	.+2158   	; 0x141e <__epilogue_restores__+0x2>

Disassembly of section .text.qtm_key_sensors_process:

00000096 <qtm_key_sensors_process>:
  96:	a4 e0       	ldi	r26, 0x04	; 4
  98:	b0 e0       	ldi	r27, 0x00	; 0
  9a:	e0 e5       	ldi	r30, 0x50	; 80
  9c:	f0 e0       	ldi	r31, 0x00	; 0
  9e:	a5 c9       	rjmp	.-3254   	; 0xfffff3ea <__eeprom_end+0xff7ef3ea>
  a0:	00 97       	sbiw	r24, 0x00	; 0
  a2:	09 f4       	brne	.+2      	; 0xa6 <qtm_key_sensors_process+0x10>
  a4:	06 c4       	rjmp	.+2060   	; 0x8b2 <__LOCK_REGION_LENGTH__+0x4b2>
  a6:	8b 83       	std	Y+3, r24	; 0x03
  a8:	9c 83       	std	Y+4, r25	; 0x04
  aa:	a1 2c       	mov	r10, r1
  ac:	b1 2c       	mov	r11, r1
  ae:	81 2c       	mov	r8, r1
  b0:	91 2c       	mov	r9, r1
  b2:	21 2c       	mov	r2, r1
  b4:	d1 2c       	mov	r13, r1
  b6:	55 24       	eor	r5, r5
  b8:	53 94       	inc	r5
  ba:	33 e0       	ldi	r19, 0x03	; 3
  bc:	c3 2e       	mov	r12, r19
  be:	45 e8       	ldi	r20, 0x85	; 133
  c0:	64 2e       	mov	r6, r20
  c2:	56 e8       	ldi	r21, 0x86	; 134
  c4:	75 2e       	mov	r7, r21
  c6:	62 e0       	ldi	r22, 0x02	; 2
  c8:	36 2e       	mov	r3, r22
  ca:	78 e0       	ldi	r23, 0x08	; 8
  cc:	47 2e       	mov	r4, r23
  ce:	eb 81       	ldd	r30, Y+3	; 0x03
  d0:	fc 81       	ldd	r31, Y+4	; 0x04
  d2:	a2 81       	ldd	r26, Z+2	; 0x02
  d4:	b3 81       	ldd	r27, Z+3	; 0x03
  d6:	8d 91       	ld	r24, X+
  d8:	9c 91       	ld	r25, X
  da:	88 16       	cp	r8, r24
  dc:	99 06       	cpc	r9, r25
  de:	08 f0       	brcs	.+2      	; 0xe2 <qtm_key_sensors_process+0x4c>
  e0:	e4 c1       	rjmp	.+968    	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
  e2:	75 01       	movw	r14, r10
  e4:	ee 0c       	add	r14, r14
  e6:	ff 1c       	adc	r15, r15
  e8:	eb 81       	ldd	r30, Y+3	; 0x03
  ea:	fc 81       	ldd	r31, Y+4	; 0x04
  ec:	84 81       	ldd	r24, Z+4	; 0x04
  ee:	95 81       	ldd	r25, Z+5	; 0x05
  f0:	fc 01       	movw	r30, r24
  f2:	ee 0d       	add	r30, r14
  f4:	ff 1d       	adc	r31, r15
  f6:	a2 81       	ldd	r26, Z+2	; 0x02
  f8:	b3 81       	ldd	r27, Z+3	; 0x03
  fa:	9c 91       	ld	r25, X
  fc:	9e 71       	andi	r25, 0x1E	; 30
  fe:	09 f0       	breq	.+2      	; 0x102 <qtm_key_sensors_process+0x6c>
 100:	50 82       	st	Z, r5
 102:	eb 81       	ldd	r30, Y+3	; 0x03
 104:	fc 81       	ldd	r31, Y+4	; 0x04
 106:	04 81       	ldd	r16, Z+4	; 0x04
 108:	15 81       	ldd	r17, Z+5	; 0x05
 10a:	0e 0d       	add	r16, r14
 10c:	1f 1d       	adc	r17, r15
 10e:	d8 01       	movw	r26, r16
 110:	8c 91       	ld	r24, X
 112:	84 30       	cpi	r24, 0x04	; 4
 114:	09 f4       	brne	.+2      	; 0x118 <qtm_key_sensors_process+0x82>
 116:	aa c0       	rjmp	.+340    	; 0x26c <__DATA_REGION_LENGTH__+0x6c>
 118:	38 f4       	brcc	.+14     	; 0x128 <qtm_key_sensors_process+0x92>
 11a:	82 30       	cpi	r24, 0x02	; 2
 11c:	e9 f0       	breq	.+58     	; 0x158 <qtm_key_sensors_process+0xc2>
 11e:	08 f0       	brcs	.+2      	; 0x122 <qtm_key_sensors_process+0x8c>
 120:	47 c0       	rjmp	.+142    	; 0x1b0 <qtm_key_sensors_process+0x11a>
 122:	81 30       	cpi	r24, 0x01	; 1
 124:	59 f0       	breq	.+22     	; 0x13c <qtm_key_sensors_process+0xa6>
 126:	ba c1       	rjmp	.+884    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 128:	85 38       	cpi	r24, 0x85	; 133
 12a:	09 f4       	brne	.+2      	; 0x12e <qtm_key_sensors_process+0x98>
 12c:	cd c0       	rjmp	.+410    	; 0x2c8 <__DATA_REGION_LENGTH__+0xc8>
 12e:	86 38       	cpi	r24, 0x86	; 134
 130:	09 f4       	brne	.+2      	; 0x134 <qtm_key_sensors_process+0x9e>
 132:	1a c1       	rjmp	.+564    	; 0x368 <__DATA_REGION_LENGTH__+0x168>
 134:	87 30       	cpi	r24, 0x07	; 7
 136:	09 f0       	breq	.+2      	; 0x13a <qtm_key_sensors_process+0xa4>
 138:	b1 c1       	rjmp	.+866    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 13a:	67 c1       	rjmp	.+718    	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 13c:	91 11       	cpse	r25, r1
 13e:	93 c0       	rjmp	.+294    	; 0x266 <__DATA_REGION_LENGTH__+0x66>
 140:	3c 92       	st	X, r3
 142:	eb 81       	ldd	r30, Y+3	; 0x03
 144:	fc 81       	ldd	r31, Y+4	; 0x04
 146:	84 81       	ldd	r24, Z+4	; 0x04
 148:	95 81       	ldd	r25, Z+5	; 0x05
 14a:	fc 01       	movw	r30, r24
 14c:	ee 0d       	add	r30, r14
 14e:	ff 1d       	adc	r31, r15
 150:	41 82       	std	Z+1, r4	; 0x01
 152:	dd 24       	eor	r13, r13
 154:	d3 94       	inc	r13
 156:	a2 c1       	rjmp	.+836    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 158:	f8 01       	movw	r30, r16
 15a:	21 81       	ldd	r18, Z+1	; 0x01
 15c:	22 23       	and	r18, r18
 15e:	31 f1       	breq	.+76     	; 0x1ac <qtm_key_sensors_process+0x116>
 160:	42 81       	ldd	r20, Z+2	; 0x02
 162:	53 81       	ldd	r21, Z+3	; 0x03
 164:	25 30       	cpi	r18, 0x05	; 5
 166:	38 f0       	brcs	.+14     	; 0x176 <qtm_key_sensors_process+0xe0>
 168:	fa 01       	movw	r30, r20
 16a:	81 81       	ldd	r24, Z+1	; 0x01
 16c:	92 81       	ldd	r25, Z+2	; 0x02
 16e:	f8 01       	movw	r30, r16
 170:	84 83       	std	Z+4, r24	; 0x04
 172:	95 83       	std	Z+5, r25	; 0x05
 174:	15 c0       	rjmp	.+42     	; 0x1a0 <qtm_key_sensors_process+0x10a>
 176:	f8 01       	movw	r30, r16
 178:	84 81       	ldd	r24, Z+4	; 0x04
 17a:	95 81       	ldd	r25, Z+5	; 0x05
 17c:	fa 01       	movw	r30, r20
 17e:	41 81       	ldd	r20, Z+1	; 0x01
 180:	52 81       	ldd	r21, Z+2	; 0x02
 182:	84 17       	cp	r24, r20
 184:	95 07       	cpc	r25, r21
 186:	61 f0       	breq	.+24     	; 0x1a0 <qtm_key_sensors_process+0x10a>
 188:	48 17       	cp	r20, r24
 18a:	59 07       	cpc	r21, r25
 18c:	28 f4       	brcc	.+10     	; 0x198 <qtm_key_sensors_process+0x102>
 18e:	01 97       	sbiw	r24, 0x01	; 1
 190:	f8 01       	movw	r30, r16
 192:	84 83       	std	Z+4, r24	; 0x04
 194:	95 83       	std	Z+5, r25	; 0x05
 196:	04 c0       	rjmp	.+8      	; 0x1a0 <qtm_key_sensors_process+0x10a>
 198:	01 96       	adiw	r24, 0x01	; 1
 19a:	f8 01       	movw	r30, r16
 19c:	84 83       	std	Z+4, r24	; 0x04
 19e:	95 83       	std	Z+5, r25	; 0x05
 1a0:	21 50       	subi	r18, 0x01	; 1
 1a2:	f8 01       	movw	r30, r16
 1a4:	21 83       	std	Z+1, r18	; 0x01
 1a6:	dd 24       	eor	r13, r13
 1a8:	d3 94       	inc	r13
 1aa:	78 c1       	rjmp	.+752    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 1ac:	c0 82       	st	Z, r12
 1ae:	76 c1       	rjmp	.+748    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 1b0:	f8 01       	movw	r30, r16
 1b2:	24 81       	ldd	r18, Z+4	; 0x04
 1b4:	35 81       	ldd	r19, Z+5	; 0x05
 1b6:	82 81       	ldd	r24, Z+2	; 0x02
 1b8:	93 81       	ldd	r25, Z+3	; 0x03
 1ba:	fc 01       	movw	r30, r24
 1bc:	41 81       	ldd	r20, Z+1	; 0x01
 1be:	52 81       	ldd	r21, Z+2	; 0x02
 1c0:	24 17       	cp	r18, r20
 1c2:	35 07       	cpc	r19, r21
 1c4:	09 f4       	brne	.+2      	; 0x1c8 <qtm_key_sensors_process+0x132>
 1c6:	6a c1       	rjmp	.+724    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 1c8:	eb 81       	ldd	r30, Y+3	; 0x03
 1ca:	fc 81       	ldd	r31, Y+4	; 0x04
 1cc:	86 81       	ldd	r24, Z+6	; 0x06
 1ce:	97 81       	ldd	r25, Z+7	; 0x07
 1d0:	42 17       	cp	r20, r18
 1d2:	53 07       	cpc	r21, r19
 1d4:	18 f5       	brcc	.+70     	; 0x21c <__DATA_REGION_LENGTH__+0x1c>
 1d6:	62 81       	ldd	r22, Z+2	; 0x02
 1d8:	73 81       	ldd	r23, Z+3	; 0x03
 1da:	24 1b       	sub	r18, r20
 1dc:	35 0b       	sbc	r19, r21
 1de:	dc 01       	movw	r26, r24
 1e0:	aa 0d       	add	r26, r10
 1e2:	bb 1d       	adc	r27, r11
 1e4:	8c 91       	ld	r24, X
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	fb 01       	movw	r30, r22
 1ea:	05 80       	ldd	r0, Z+5	; 0x05
 1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <qtm_key_sensors_process+0x15c>
 1ee:	95 95       	asr	r25
 1f0:	87 95       	ror	r24
 1f2:	0a 94       	dec	r0
 1f4:	e2 f7       	brpl	.-8      	; 0x1ee <qtm_key_sensors_process+0x158>
 1f6:	99 27       	eor	r25, r25
 1f8:	28 17       	cp	r18, r24
 1fa:	39 07       	cpc	r19, r25
 1fc:	08 f4       	brcc	.+2      	; 0x200 <__DATA_REGION_LENGTH__>
 1fe:	4e c1       	rjmp	.+668    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 200:	84 81       	ldd	r24, Z+4	; 0x04
 202:	88 23       	and	r24, r24
 204:	09 f4       	brne	.+2      	; 0x208 <__DATA_REGION_LENGTH__+0x8>
 206:	4a c1       	rjmp	.+660    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 208:	e7 e0       	ldi	r30, 0x07	; 7
 20a:	d8 01       	movw	r26, r16
 20c:	ec 93       	st	X, r30
 20e:	eb 81       	ldd	r30, Y+3	; 0x03
 210:	fc 81       	ldd	r31, Y+4	; 0x04
 212:	82 81       	ldd	r24, Z+2	; 0x02
 214:	93 81       	ldd	r25, Z+3	; 0x03
 216:	fc 01       	movw	r30, r24
 218:	24 81       	ldd	r18, Z+4	; 0x04
 21a:	1d c0       	rjmp	.+58     	; 0x256 <__DATA_REGION_LENGTH__+0x56>
 21c:	fc 01       	movw	r30, r24
 21e:	ea 0d       	add	r30, r10
 220:	fb 1d       	adc	r31, r11
 222:	42 1b       	sub	r20, r18
 224:	53 0b       	sbc	r21, r19
 226:	80 81       	ld	r24, Z
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	48 17       	cp	r20, r24
 22c:	59 07       	cpc	r21, r25
 22e:	08 f4       	brcc	.+2      	; 0x232 <__DATA_REGION_LENGTH__+0x32>
 230:	35 c1       	rjmp	.+618    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 232:	82 81       	ldd	r24, Z+2	; 0x02
 234:	88 23       	and	r24, r24
 236:	31 f0       	breq	.+12     	; 0x244 <__DATA_REGION_LENGTH__+0x44>
 238:	b4 01       	movw	r22, r8
 23a:	8b 81       	ldd	r24, Y+3	; 0x03
 23c:	9c 81       	ldd	r25, Y+4	; 0x04
 23e:	b3 d5       	rcall	.+2918   	; 0xda6 <check_for_aks_block>
 240:	81 11       	cpse	r24, r1
 242:	2c c1       	rjmp	.+600    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 244:	e4 e0       	ldi	r30, 0x04	; 4
 246:	d8 01       	movw	r26, r16
 248:	ec 93       	st	X, r30
 24a:	eb 81       	ldd	r30, Y+3	; 0x03
 24c:	fc 81       	ldd	r31, Y+4	; 0x04
 24e:	82 81       	ldd	r24, Z+2	; 0x02
 250:	93 81       	ldd	r25, Z+3	; 0x03
 252:	fc 01       	movw	r30, r24
 254:	22 81       	ldd	r18, Z+2	; 0x02
 256:	eb 81       	ldd	r30, Y+3	; 0x03
 258:	fc 81       	ldd	r31, Y+4	; 0x04
 25a:	84 81       	ldd	r24, Z+4	; 0x04
 25c:	95 81       	ldd	r25, Z+5	; 0x05
 25e:	fc 01       	movw	r30, r24
 260:	ee 0d       	add	r30, r14
 262:	ff 1d       	adc	r31, r15
 264:	21 83       	std	Z+1, r18	; 0x01
 266:	dd 24       	eor	r13, r13
 268:	d3 94       	inc	r13
 26a:	18 c1       	rjmp	.+560    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 26c:	f8 01       	movw	r30, r16
 26e:	24 81       	ldd	r18, Z+4	; 0x04
 270:	35 81       	ldd	r19, Z+5	; 0x05
 272:	82 81       	ldd	r24, Z+2	; 0x02
 274:	93 81       	ldd	r25, Z+3	; 0x03
 276:	fc 01       	movw	r30, r24
 278:	81 81       	ldd	r24, Z+1	; 0x01
 27a:	92 81       	ldd	r25, Z+2	; 0x02
 27c:	82 17       	cp	r24, r18
 27e:	93 07       	cpc	r25, r19
 280:	08 f4       	brcc	.+2      	; 0x284 <__DATA_REGION_LENGTH__+0x84>
 282:	ff c0       	rjmp	.+510    	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 284:	eb 81       	ldd	r30, Y+3	; 0x03
 286:	fc 81       	ldd	r31, Y+4	; 0x04
 288:	46 81       	ldd	r20, Z+6	; 0x06
 28a:	57 81       	ldd	r21, Z+7	; 0x07
 28c:	fa 01       	movw	r30, r20
 28e:	ea 0d       	add	r30, r10
 290:	fb 1d       	adc	r31, r11
 292:	82 1b       	sub	r24, r18
 294:	93 0b       	sbc	r25, r19
 296:	20 81       	ld	r18, Z
 298:	30 e0       	ldi	r19, 0x00	; 0
 29a:	28 17       	cp	r18, r24
 29c:	39 07       	cpc	r19, r25
 29e:	08 f0       	brcs	.+2      	; 0x2a2 <__DATA_REGION_LENGTH__+0xa2>
 2a0:	f0 c0       	rjmp	.+480    	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 2a2:	82 81       	ldd	r24, Z+2	; 0x02
 2a4:	88 23       	and	r24, r24
 2a6:	31 f0       	breq	.+12     	; 0x2b4 <__DATA_REGION_LENGTH__+0xb4>
 2a8:	b4 01       	movw	r22, r8
 2aa:	8b 81       	ldd	r24, Y+3	; 0x03
 2ac:	9c 81       	ldd	r25, Y+4	; 0x04
 2ae:	7b d5       	rcall	.+2806   	; 0xda6 <check_for_aks_block>
 2b0:	81 11       	cpse	r24, r1
 2b2:	f4 c0       	rjmp	.+488    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 2b4:	f8 01       	movw	r30, r16
 2b6:	81 81       	ldd	r24, Z+1	; 0x01
 2b8:	88 23       	and	r24, r24
 2ba:	09 f4       	brne	.+2      	; 0x2be <__DATA_REGION_LENGTH__+0xbe>
 2bc:	83 c0       	rjmp	.+262    	; 0x3c4 <__DATA_REGION_LENGTH__+0x1c4>
 2be:	81 50       	subi	r24, 0x01	; 1
 2c0:	81 83       	std	Z+1, r24	; 0x01
 2c2:	dd 24       	eor	r13, r13
 2c4:	d3 94       	inc	r13
 2c6:	ea c0       	rjmp	.+468    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 2c8:	ab 81       	ldd	r26, Y+3	; 0x03
 2ca:	bc 81       	ldd	r27, Y+4	; 0x04
 2cc:	2d 91       	ld	r18, X+
 2ce:	3c 91       	ld	r19, X
 2d0:	11 97       	sbiw	r26, 0x01	; 1
 2d2:	fd 01       	movw	r30, r26
 2d4:	82 81       	ldd	r24, Z+2	; 0x02
 2d6:	93 81       	ldd	r25, Z+3	; 0x03
 2d8:	fc 01       	movw	r30, r24
 2da:	80 85       	ldd	r24, Z+8	; 0x08
 2dc:	f9 01       	movw	r30, r18
 2de:	83 83       	std	Z+3, r24	; 0x03
 2e0:	fd 01       	movw	r30, r26
 2e2:	24 81       	ldd	r18, Z+4	; 0x04
 2e4:	35 81       	ldd	r19, Z+5	; 0x05
 2e6:	c9 01       	movw	r24, r18
 2e8:	8e 0d       	add	r24, r14
 2ea:	9f 1d       	adc	r25, r15
 2ec:	89 83       	std	Y+1, r24	; 0x01
 2ee:	9a 83       	std	Y+2, r25	; 0x02
 2f0:	fc 01       	movw	r30, r24
 2f2:	64 81       	ldd	r22, Z+4	; 0x04
 2f4:	75 81       	ldd	r23, Z+5	; 0x05
 2f6:	82 81       	ldd	r24, Z+2	; 0x02
 2f8:	93 81       	ldd	r25, Z+3	; 0x03
 2fa:	fc 01       	movw	r30, r24
 2fc:	21 81       	ldd	r18, Z+1	; 0x01
 2fe:	32 81       	ldd	r19, Z+2	; 0x02
 300:	26 17       	cp	r18, r22
 302:	37 07       	cpc	r19, r23
 304:	d8 f0       	brcs	.+54     	; 0x33c <__DATA_REGION_LENGTH__+0x13c>
 306:	eb 81       	ldd	r30, Y+3	; 0x03
 308:	fc 81       	ldd	r31, Y+4	; 0x04
 30a:	a6 81       	ldd	r26, Z+6	; 0x06
 30c:	b7 81       	ldd	r27, Z+7	; 0x07
 30e:	aa 0d       	add	r26, r10
 310:	bb 1d       	adc	r27, r11
 312:	1c 91       	ld	r17, X
 314:	41 2f       	mov	r20, r17
 316:	50 e0       	ldi	r21, 0x00	; 0
 318:	fd 01       	movw	r30, r26
 31a:	81 81       	ldd	r24, Z+1	; 0x01
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	01 96       	adiw	r24, 0x01	; 1
 320:	02 c0       	rjmp	.+4      	; 0x326 <__DATA_REGION_LENGTH__+0x126>
 322:	55 95       	asr	r21
 324:	47 95       	ror	r20
 326:	8a 95       	dec	r24
 328:	e2 f7       	brpl	.-8      	; 0x322 <__DATA_REGION_LENGTH__+0x122>
 32a:	26 1b       	sub	r18, r22
 32c:	37 0b       	sbc	r19, r23
 32e:	14 1b       	sub	r17, r20
 330:	81 2f       	mov	r24, r17
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	82 17       	cp	r24, r18
 336:	93 07       	cpc	r25, r19
 338:	08 f4       	brcc	.+2      	; 0x33c <__DATA_REGION_LENGTH__+0x13c>
 33a:	ae c0       	rjmp	.+348    	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 33c:	a9 81       	ldd	r26, Y+1	; 0x01
 33e:	ba 81       	ldd	r27, Y+2	; 0x02
 340:	7c 92       	st	X, r7
 342:	eb 81       	ldd	r30, Y+3	; 0x03
 344:	fc 81       	ldd	r31, Y+4	; 0x04
 346:	82 81       	ldd	r24, Z+2	; 0x02
 348:	93 81       	ldd	r25, Z+3	; 0x03
 34a:	fc 01       	movw	r30, r24
 34c:	22 81       	ldd	r18, Z+2	; 0x02
 34e:	eb 81       	ldd	r30, Y+3	; 0x03
 350:	fc 81       	ldd	r31, Y+4	; 0x04
 352:	84 81       	ldd	r24, Z+4	; 0x04
 354:	95 81       	ldd	r25, Z+5	; 0x05
 356:	fc 01       	movw	r30, r24
 358:	ee 0d       	add	r30, r14
 35a:	ff 1d       	adc	r31, r15
 35c:	21 83       	std	Z+1, r18	; 0x01
 35e:	22 24       	eor	r2, r2
 360:	23 94       	inc	r2
 362:	dd 24       	eor	r13, r13
 364:	d3 94       	inc	r13
 366:	9a c0       	rjmp	.+308    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 368:	f8 01       	movw	r30, r16
 36a:	64 81       	ldd	r22, Z+4	; 0x04
 36c:	75 81       	ldd	r23, Z+5	; 0x05
 36e:	82 81       	ldd	r24, Z+2	; 0x02
 370:	93 81       	ldd	r25, Z+3	; 0x03
 372:	fc 01       	movw	r30, r24
 374:	21 81       	ldd	r18, Z+1	; 0x01
 376:	32 81       	ldd	r19, Z+2	; 0x02
 378:	26 17       	cp	r18, r22
 37a:	37 07       	cpc	r19, r23
 37c:	50 f4       	brcc	.+20     	; 0x392 <__DATA_REGION_LENGTH__+0x192>
 37e:	f8 01       	movw	r30, r16
 380:	81 81       	ldd	r24, Z+1	; 0x01
 382:	88 23       	and	r24, r24
 384:	b1 f1       	breq	.+108    	; 0x3f2 <__DATA_REGION_LENGTH__+0x1f2>
 386:	81 50       	subi	r24, 0x01	; 1
 388:	f8 01       	movw	r30, r16
 38a:	81 83       	std	Z+1, r24	; 0x01
 38c:	22 24       	eor	r2, r2
 38e:	23 94       	inc	r2
 390:	85 c0       	rjmp	.+266    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 392:	eb 81       	ldd	r30, Y+3	; 0x03
 394:	fc 81       	ldd	r31, Y+4	; 0x04
 396:	86 81       	ldd	r24, Z+6	; 0x06
 398:	97 81       	ldd	r25, Z+7	; 0x07
 39a:	fc 01       	movw	r30, r24
 39c:	ea 0d       	add	r30, r10
 39e:	fb 1d       	adc	r31, r11
 3a0:	a0 81       	ld	r26, Z
 3a2:	4a 2f       	mov	r20, r26
 3a4:	50 e0       	ldi	r21, 0x00	; 0
 3a6:	81 81       	ldd	r24, Z+1	; 0x01
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	01 96       	adiw	r24, 0x01	; 1
 3ac:	02 c0       	rjmp	.+4      	; 0x3b2 <__DATA_REGION_LENGTH__+0x1b2>
 3ae:	55 95       	asr	r21
 3b0:	47 95       	ror	r20
 3b2:	8a 95       	dec	r24
 3b4:	e2 f7       	brpl	.-8      	; 0x3ae <__DATA_REGION_LENGTH__+0x1ae>
 3b6:	26 1b       	sub	r18, r22
 3b8:	37 0b       	sbc	r19, r23
 3ba:	a4 1b       	sub	r26, r20
 3bc:	b0 e0       	ldi	r27, 0x00	; 0
 3be:	a2 17       	cp	r26, r18
 3c0:	b3 07       	cpc	r27, r19
 3c2:	98 f4       	brcc	.+38     	; 0x3ea <__DATA_REGION_LENGTH__+0x1ea>
 3c4:	d8 01       	movw	r26, r16
 3c6:	6c 92       	st	X, r6
 3c8:	eb 81       	ldd	r30, Y+3	; 0x03
 3ca:	fc 81       	ldd	r31, Y+4	; 0x04
 3cc:	82 81       	ldd	r24, Z+2	; 0x02
 3ce:	93 81       	ldd	r25, Z+3	; 0x03
 3d0:	fc 01       	movw	r30, r24
 3d2:	23 81       	ldd	r18, Z+3	; 0x03
 3d4:	eb 81       	ldd	r30, Y+3	; 0x03
 3d6:	fc 81       	ldd	r31, Y+4	; 0x04
 3d8:	84 81       	ldd	r24, Z+4	; 0x04
 3da:	95 81       	ldd	r25, Z+5	; 0x05
 3dc:	fc 01       	movw	r30, r24
 3de:	ee 0d       	add	r30, r14
 3e0:	ff 1d       	adc	r31, r15
 3e2:	21 83       	std	Z+1, r18	; 0x01
 3e4:	22 24       	eor	r2, r2
 3e6:	23 94       	inc	r2
 3e8:	59 c0       	rjmp	.+178    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 3ea:	f8 01       	movw	r30, r16
 3ec:	81 81       	ldd	r24, Z+1	; 0x01
 3ee:	81 11       	cpse	r24, r1
 3f0:	04 c0       	rjmp	.+8      	; 0x3fa <__DATA_REGION_LENGTH__+0x1fa>
 3f2:	c0 82       	st	Z, r12
 3f4:	22 24       	eor	r2, r2
 3f6:	23 94       	inc	r2
 3f8:	51 c0       	rjmp	.+162    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 3fa:	81 50       	subi	r24, 0x01	; 1
 3fc:	f8 01       	movw	r30, r16
 3fe:	81 83       	std	Z+1, r24	; 0x01
 400:	22 24       	eor	r2, r2
 402:	23 94       	inc	r2
 404:	dd 24       	eor	r13, r13
 406:	d3 94       	inc	r13
 408:	49 c0       	rjmp	.+146    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 40a:	f8 01       	movw	r30, r16
 40c:	24 81       	ldd	r18, Z+4	; 0x04
 40e:	35 81       	ldd	r19, Z+5	; 0x05
 410:	82 81       	ldd	r24, Z+2	; 0x02
 412:	93 81       	ldd	r25, Z+3	; 0x03
 414:	fc 01       	movw	r30, r24
 416:	81 81       	ldd	r24, Z+1	; 0x01
 418:	92 81       	ldd	r25, Z+2	; 0x02
 41a:	82 17       	cp	r24, r18
 41c:	93 07       	cpc	r25, r19
 41e:	88 f5       	brcc	.+98     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 420:	28 1b       	sub	r18, r24
 422:	39 0b       	sbc	r19, r25
 424:	eb 81       	ldd	r30, Y+3	; 0x03
 426:	fc 81       	ldd	r31, Y+4	; 0x04
 428:	86 81       	ldd	r24, Z+6	; 0x06
 42a:	97 81       	ldd	r25, Z+7	; 0x07
 42c:	fc 01       	movw	r30, r24
 42e:	ea 0d       	add	r30, r10
 430:	fb 1d       	adc	r31, r11
 432:	80 81       	ld	r24, Z
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	eb 81       	ldd	r30, Y+3	; 0x03
 438:	fc 81       	ldd	r31, Y+4	; 0x04
 43a:	42 81       	ldd	r20, Z+2	; 0x02
 43c:	53 81       	ldd	r21, Z+3	; 0x03
 43e:	fa 01       	movw	r30, r20
 440:	05 80       	ldd	r0, Z+5	; 0x05
 442:	02 c0       	rjmp	.+4      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 444:	95 95       	asr	r25
 446:	87 95       	ror	r24
 448:	0a 94       	dec	r0
 44a:	e2 f7       	brpl	.-8      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 44c:	99 27       	eor	r25, r25
 44e:	28 17       	cp	r18, r24
 450:	39 07       	cpc	r19, r25
 452:	b8 f0       	brcs	.+46     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 454:	f8 01       	movw	r30, r16
 456:	81 81       	ldd	r24, Z+1	; 0x01
 458:	81 11       	cpse	r24, r1
 45a:	0d c0       	rjmp	.+26     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 45c:	5c 92       	st	X, r5
 45e:	eb 81       	ldd	r30, Y+3	; 0x03
 460:	fc 81       	ldd	r31, Y+4	; 0x04
 462:	84 81       	ldd	r24, Z+4	; 0x04
 464:	95 81       	ldd	r25, Z+5	; 0x05
 466:	fc 01       	movw	r30, r24
 468:	ee 0d       	add	r30, r14
 46a:	ff 1d       	adc	r31, r15
 46c:	02 80       	ldd	r0, Z+2	; 0x02
 46e:	f3 81       	ldd	r31, Z+3	; 0x03
 470:	e0 2d       	mov	r30, r0
 472:	c0 82       	st	Z, r12
 474:	13 c0       	rjmp	.+38     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 476:	81 50       	subi	r24, 0x01	; 1
 478:	f8 01       	movw	r30, r16
 47a:	81 83       	std	Z+1, r24	; 0x01
 47c:	dd 24       	eor	r13, r13
 47e:	d3 94       	inc	r13
 480:	0d c0       	rjmp	.+26     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 482:	d8 01       	movw	r26, r16
 484:	cc 92       	st	X, r12
 486:	eb 81       	ldd	r30, Y+3	; 0x03
 488:	fc 81       	ldd	r31, Y+4	; 0x04
 48a:	84 81       	ldd	r24, Z+4	; 0x04
 48c:	95 81       	ldd	r25, Z+5	; 0x05
 48e:	fc 01       	movw	r30, r24
 490:	ee 0d       	add	r30, r14
 492:	ff 1d       	adc	r31, r15
 494:	11 82       	std	Z+1, r1	; 0x01
 496:	02 c0       	rjmp	.+4      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 498:	22 24       	eor	r2, r2
 49a:	23 94       	inc	r2
 49c:	ff ef       	ldi	r31, 0xFF	; 255
 49e:	8f 1a       	sub	r8, r31
 4a0:	9f 0a       	sbc	r9, r31
 4a2:	83 e0       	ldi	r24, 0x03	; 3
 4a4:	a8 0e       	add	r10, r24
 4a6:	b1 1c       	adc	r11, r1
 4a8:	12 ce       	rjmp	.-988    	; 0xce <qtm_key_sensors_process+0x38>
 4aa:	01 90       	ld	r0, Z+
 4ac:	f0 81       	ld	r31, Z
 4ae:	e0 2d       	mov	r30, r0
 4b0:	80 81       	ld	r24, Z
 4b2:	87 ff       	sbrs	r24, 7
 4b4:	29 c0       	rjmp	.+82     	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 4b6:	40 e0       	ldi	r20, 0x00	; 0
 4b8:	50 e0       	ldi	r21, 0x00	; 0
 4ba:	20 e0       	ldi	r18, 0x00	; 0
 4bc:	30 e0       	ldi	r19, 0x00	; 0
 4be:	eb 81       	ldd	r30, Y+3	; 0x03
 4c0:	fc 81       	ldd	r31, Y+4	; 0x04
 4c2:	a2 81       	ldd	r26, Z+2	; 0x02
 4c4:	b3 81       	ldd	r27, Z+3	; 0x03
 4c6:	8d 91       	ld	r24, X+
 4c8:	9c 91       	ld	r25, X
 4ca:	28 17       	cp	r18, r24
 4cc:	39 07       	cpc	r19, r25
 4ce:	b0 f4       	brcc	.+44     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4d0:	eb 81       	ldd	r30, Y+3	; 0x03
 4d2:	fc 81       	ldd	r31, Y+4	; 0x04
 4d4:	84 81       	ldd	r24, Z+4	; 0x04
 4d6:	95 81       	ldd	r25, Z+5	; 0x05
 4d8:	fc 01       	movw	r30, r24
 4da:	e4 0f       	add	r30, r20
 4dc:	f5 1f       	adc	r31, r21
 4de:	a2 81       	ldd	r26, Z+2	; 0x02
 4e0:	b3 81       	ldd	r27, Z+3	; 0x03
 4e2:	8c 91       	ld	r24, X
 4e4:	80 fd       	sbrc	r24, 0
 4e6:	05 c0       	rjmp	.+10     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4e8:	90 81       	ld	r25, Z
 4ea:	97 7f       	andi	r25, 0xF7	; 247
 4ec:	11 f0       	breq	.+4      	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4ee:	81 60       	ori	r24, 0x01	; 1
 4f0:	8c 93       	st	X, r24
 4f2:	2f 5f       	subi	r18, 0xFF	; 255
 4f4:	3f 4f       	sbci	r19, 0xFF	; 255
 4f6:	4a 5f       	subi	r20, 0xFA	; 250
 4f8:	5f 4f       	sbci	r21, 0xFF	; 255
 4fa:	e1 cf       	rjmp	.-62     	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4fc:	01 90       	ld	r0, Z+
 4fe:	f0 81       	ld	r31, Z
 500:	e0 2d       	mov	r30, r0
 502:	80 81       	ld	r24, Z
 504:	8f 77       	andi	r24, 0x7F	; 127
 506:	80 83       	st	Z, r24
 508:	d1 10       	cpse	r13, r1
 50a:	0a c0       	rjmp	.+20     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 50c:	ab 81       	ldd	r26, Y+3	; 0x03
 50e:	bc 81       	ldd	r27, Y+4	; 0x04
 510:	ed 91       	ld	r30, X+
 512:	fc 91       	ld	r31, X
 514:	21 10       	cpse	r2, r1
 516:	83 c0       	rjmp	.+262    	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 518:	80 81       	ld	r24, Z
 51a:	8e 7f       	andi	r24, 0xFE	; 254
 51c:	80 83       	st	Z, r24
 51e:	82 c0       	rjmp	.+260    	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 520:	eb 81       	ldd	r30, Y+3	; 0x03
 522:	fc 81       	ldd	r31, Y+4	; 0x04
 524:	82 81       	ldd	r24, Z+2	; 0x02
 526:	93 81       	ldd	r25, Z+3	; 0x03
 528:	fc 01       	movw	r30, r24
 52a:	81 85       	ldd	r24, Z+9	; 0x09
 52c:	88 23       	and	r24, r24
 52e:	71 f3       	breq	.-36     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 530:	ab 81       	ldd	r26, Y+3	; 0x03
 532:	bc 81       	ldd	r27, Y+4	; 0x04
 534:	ed 91       	ld	r30, X+
 536:	fc 91       	ld	r31, X
 538:	11 97       	sbiw	r26, 0x01	; 1
 53a:	80 81       	ld	r24, Z
 53c:	80 68       	ori	r24, 0x80	; 128
 53e:	80 83       	st	Z, r24
 540:	fd 01       	movw	r30, r26
 542:	82 81       	ldd	r24, Z+2	; 0x02
 544:	93 81       	ldd	r25, Z+3	; 0x03
 546:	fc 01       	movw	r30, r24
 548:	81 85       	ldd	r24, Z+9	; 0x09
 54a:	81 30       	cpi	r24, 0x01	; 1
 54c:	f9 f6       	brne	.-66     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 54e:	40 e0       	ldi	r20, 0x00	; 0
 550:	50 e0       	ldi	r21, 0x00	; 0
 552:	20 e0       	ldi	r18, 0x00	; 0
 554:	30 e0       	ldi	r19, 0x00	; 0
 556:	96 e0       	ldi	r25, 0x06	; 6
 558:	d9 2e       	mov	r13, r25
 55a:	eb 81       	ldd	r30, Y+3	; 0x03
 55c:	fc 81       	ldd	r31, Y+4	; 0x04
 55e:	a2 81       	ldd	r26, Z+2	; 0x02
 560:	b3 81       	ldd	r27, Z+3	; 0x03
 562:	0d 90       	ld	r0, X+
 564:	bc 91       	ld	r27, X
 566:	a0 2d       	mov	r26, r0
 568:	2a 17       	cp	r18, r26
 56a:	3b 07       	cpc	r19, r27
 56c:	78 f6       	brcc	.-98     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 56e:	eb 81       	ldd	r30, Y+3	; 0x03
 570:	fc 81       	ldd	r31, Y+4	; 0x04
 572:	04 81       	ldd	r16, Z+4	; 0x04
 574:	15 81       	ldd	r17, Z+5	; 0x05
 576:	fa 01       	movw	r30, r20
 578:	ee 0f       	add	r30, r30
 57a:	ff 1f       	adc	r31, r31
 57c:	4f 01       	movw	r8, r30
 57e:	80 0e       	add	r8, r16
 580:	91 1e       	adc	r9, r17
 582:	f4 01       	movw	r30, r8
 584:	80 81       	ld	r24, Z
 586:	98 2f       	mov	r25, r24
 588:	97 7f       	andi	r25, 0xF7	; 247
 58a:	b9 f1       	breq	.+110    	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 58c:	85 38       	cpi	r24, 0x85	; 133
 58e:	11 f0       	breq	.+4      	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 590:	83 30       	cpi	r24, 0x03	; 3
 592:	d1 f5       	brne	.+116    	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 594:	eb 81       	ldd	r30, Y+3	; 0x03
 596:	fc 81       	ldd	r31, Y+4	; 0x04
 598:	e6 80       	ldd	r14, Z+6	; 0x06
 59a:	f7 80       	ldd	r15, Z+7	; 0x07
 59c:	c7 01       	movw	r24, r14
 59e:	84 0f       	add	r24, r20
 5a0:	95 1f       	adc	r25, r21
 5a2:	fc 01       	movw	r30, r24
 5a4:	b2 80       	ldd	r11, Z+2	; 0x02
 5a6:	bb 20       	and	r11, r11
 5a8:	41 f1       	breq	.+80     	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5aa:	80 e0       	ldi	r24, 0x00	; 0
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	c1 2c       	mov	r12, r1
 5b0:	8a 17       	cp	r24, r26
 5b2:	9b 07       	cpc	r25, r27
 5b4:	00 f5       	brcc	.+64     	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5b6:	28 17       	cp	r18, r24
 5b8:	39 07       	cpc	r19, r25
 5ba:	d9 f0       	breq	.+54     	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
 5bc:	d8 9e       	mul	r13, r24
 5be:	b0 01       	movw	r22, r0
 5c0:	d9 9e       	mul	r13, r25
 5c2:	70 0d       	add	r23, r0
 5c4:	11 24       	eor	r1, r1
 5c6:	60 0f       	add	r22, r16
 5c8:	71 1f       	adc	r23, r17
 5ca:	fb 01       	movw	r30, r22
 5cc:	60 81       	ld	r22, Z
 5ce:	64 30       	cpi	r22, 0x04	; 4
 5d0:	11 f0       	breq	.+4      	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5d2:	66 38       	cpi	r22, 0x86	; 134
 5d4:	71 f4       	brne	.+28     	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
 5d6:	bc 01       	movw	r22, r24
 5d8:	66 0f       	add	r22, r22
 5da:	77 1f       	adc	r23, r23
 5dc:	68 0f       	add	r22, r24
 5de:	79 1f       	adc	r23, r25
 5e0:	6e 0d       	add	r22, r14
 5e2:	7f 1d       	adc	r23, r15
 5e4:	fb 01       	movw	r30, r22
 5e6:	62 81       	ldd	r22, Z+2	; 0x02
 5e8:	b6 12       	cpse	r11, r22
 5ea:	03 c0       	rjmp	.+6      	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
 5ec:	cd 01       	movw	r24, r26
 5ee:	cc 24       	eor	r12, r12
 5f0:	c3 94       	inc	r12
 5f2:	01 96       	adiw	r24, 0x01	; 1
 5f4:	dd cf       	rjmp	.-70     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5f6:	c1 10       	cpse	r12, r1
 5f8:	07 c0       	rjmp	.+14     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 5fa:	f4 01       	movw	r30, r8
 5fc:	a2 81       	ldd	r26, Z+2	; 0x02
 5fe:	b3 81       	ldd	r27, Z+3	; 0x03
 600:	8c 91       	ld	r24, X
 602:	8e 7f       	andi	r24, 0xFE	; 254
 604:	8c 93       	st	X, r24
 606:	06 c0       	rjmp	.+12     	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 608:	f4 01       	movw	r30, r8
 60a:	a2 81       	ldd	r26, Z+2	; 0x02
 60c:	b3 81       	ldd	r27, Z+3	; 0x03
 60e:	8c 91       	ld	r24, X
 610:	81 60       	ori	r24, 0x01	; 1
 612:	8c 93       	st	X, r24
 614:	2f 5f       	subi	r18, 0xFF	; 255
 616:	3f 4f       	sbci	r19, 0xFF	; 255
 618:	4d 5f       	subi	r20, 0xFD	; 253
 61a:	5f 4f       	sbci	r21, 0xFF	; 255
 61c:	9e cf       	rjmp	.-196    	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 61e:	80 81       	ld	r24, Z
 620:	81 60       	ori	r24, 0x01	; 1
 622:	80 83       	st	Z, r24
 624:	80 91 79 3e 	lds	r24, 0x3E79	; 0x803e79 <qtm_local_ms_timecount>
 628:	90 91 7a 3e 	lds	r25, 0x3E7A	; 0x803e7a <qtm_local_ms_timecount+0x1>
 62c:	ab 81       	ldd	r26, Y+3	; 0x03
 62e:	bc 81       	ldd	r27, Y+4	; 0x04
 630:	ed 91       	ld	r30, X+
 632:	fc 91       	ld	r31, X
 634:	21 81       	ldd	r18, Z+1	; 0x01
 636:	32 81       	ldd	r19, Z+2	; 0x02
 638:	a9 01       	movw	r20, r18
 63a:	48 53       	subi	r20, 0x38	; 56
 63c:	5f 4f       	sbci	r21, 0xFF	; 255
 63e:	48 17       	cp	r20, r24
 640:	59 07       	cpc	r21, r25
 642:	38 f4       	brcc	.+14     	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 644:	82 1b       	sub	r24, r18
 646:	93 0b       	sbc	r25, r19
 648:	aa 24       	eor	r10, r10
 64a:	a3 94       	inc	r10
 64c:	a3 e0       	ldi	r26, 0x03	; 3
 64e:	ba 2e       	mov	r11, r26
 650:	50 c0       	rjmp	.+160    	; 0x6f2 <__LOCK_REGION_LENGTH__+0x2f2>
 652:	82 17       	cp	r24, r18
 654:	93 07       	cpc	r25, r19
 656:	10 f0       	brcs	.+4      	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 658:	80 e0       	ldi	r24, 0x00	; 0
 65a:	2c c1       	rjmp	.+600    	; 0x8b4 <__LOCK_REGION_LENGTH__+0x4b4>
 65c:	82 1b       	sub	r24, r18
 65e:	93 0b       	sbc	r25, r19
 660:	01 97       	sbiw	r24, 0x01	; 1
 662:	89 3c       	cpi	r24, 0xC9	; 201
 664:	91 05       	cpc	r25, r1
 666:	c0 f3       	brcs	.-16     	; 0x658 <__LOCK_REGION_LENGTH__+0x258>
 668:	ef cf       	rjmp	.-34     	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 66a:	88 5c       	subi	r24, 0xC8	; 200
 66c:	91 09       	sbc	r25, r1
 66e:	ab 81       	ldd	r26, Y+3	; 0x03
 670:	bc 81       	ldd	r27, Y+4	; 0x04
 672:	ed 91       	ld	r30, X+
 674:	fc 91       	ld	r31, X
 676:	21 81       	ldd	r18, Z+1	; 0x01
 678:	32 81       	ldd	r19, Z+2	; 0x02
 67a:	28 53       	subi	r18, 0x38	; 56
 67c:	3f 4f       	sbci	r19, 0xFF	; 255
 67e:	21 83       	std	Z+1, r18	; 0x01
 680:	32 83       	std	Z+2, r19	; 0x02
 682:	23 81       	ldd	r18, Z+3	; 0x03
 684:	21 11       	cpse	r18, r1
 686:	aa c0       	rjmp	.+340    	; 0x7dc <__LOCK_REGION_LENGTH__+0x3dc>
 688:	24 81       	ldd	r18, Z+4	; 0x04
 68a:	22 23       	and	r18, r18
 68c:	11 f0       	breq	.+4      	; 0x692 <__LOCK_REGION_LENGTH__+0x292>
 68e:	21 50       	subi	r18, 0x01	; 1
 690:	24 83       	std	Z+4, r18	; 0x04
 692:	ab 81       	ldd	r26, Y+3	; 0x03
 694:	bc 81       	ldd	r27, Y+4	; 0x04
 696:	ed 91       	ld	r30, X+
 698:	fc 91       	ld	r31, X
 69a:	25 81       	ldd	r18, Z+5	; 0x05
 69c:	22 23       	and	r18, r18
 69e:	11 f0       	breq	.+4      	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
 6a0:	21 50       	subi	r18, 0x01	; 1
 6a2:	25 83       	std	Z+5, r18	; 0x05
 6a4:	eb 81       	ldd	r30, Y+3	; 0x03
 6a6:	fc 81       	ldd	r31, Y+4	; 0x04
 6a8:	a2 81       	ldd	r26, Z+2	; 0x02
 6aa:	b3 81       	ldd	r27, Z+3	; 0x03
 6ac:	fd 01       	movw	r30, r26
 6ae:	26 81       	ldd	r18, Z+6	; 0x06
 6b0:	21 11       	cpse	r18, r1
 6b2:	24 c0       	rjmp	.+72     	; 0x6fc <__LOCK_REGION_LENGTH__+0x2fc>
 6b4:	eb 81       	ldd	r30, Y+3	; 0x03
 6b6:	fc 81       	ldd	r31, Y+4	; 0x04
 6b8:	a2 81       	ldd	r26, Z+2	; 0x02
 6ba:	b3 81       	ldd	r27, Z+3	; 0x03
 6bc:	fd 01       	movw	r30, r26
 6be:	27 81       	ldd	r18, Z+7	; 0x07
 6c0:	21 11       	cpse	r18, r1
 6c2:	54 c0       	rjmp	.+168    	; 0x76c <__LOCK_REGION_LENGTH__+0x36c>
 6c4:	eb 81       	ldd	r30, Y+3	; 0x03
 6c6:	fc 81       	ldd	r31, Y+4	; 0x04
 6c8:	22 81       	ldd	r18, Z+2	; 0x02
 6ca:	33 81       	ldd	r19, Z+3	; 0x03
 6cc:	f9 01       	movw	r30, r18
 6ce:	23 81       	ldd	r18, Z+3	; 0x03
 6d0:	22 23       	and	r18, r18
 6d2:	79 f0       	breq	.+30     	; 0x6f2 <__LOCK_REGION_LENGTH__+0x2f2>
 6d4:	20 e0       	ldi	r18, 0x00	; 0
 6d6:	30 e0       	ldi	r19, 0x00	; 0
 6d8:	a0 e0       	ldi	r26, 0x00	; 0
 6da:	b0 e0       	ldi	r27, 0x00	; 0
 6dc:	eb 81       	ldd	r30, Y+3	; 0x03
 6de:	fc 81       	ldd	r31, Y+4	; 0x04
 6e0:	42 81       	ldd	r20, Z+2	; 0x02
 6e2:	53 81       	ldd	r21, Z+3	; 0x03
 6e4:	fa 01       	movw	r30, r20
 6e6:	40 81       	ld	r20, Z
 6e8:	51 81       	ldd	r21, Z+1	; 0x01
 6ea:	a4 17       	cp	r26, r20
 6ec:	b5 07       	cpc	r27, r21
 6ee:	08 f4       	brcc	.+2      	; 0x6f2 <__LOCK_REGION_LENGTH__+0x2f2>
 6f0:	78 c0       	rjmp	.+240    	; 0x7e2 <__LOCK_REGION_LENGTH__+0x3e2>
 6f2:	89 3c       	cpi	r24, 0xC9	; 201
 6f4:	91 05       	cpc	r25, r1
 6f6:	08 f0       	brcs	.+2      	; 0x6fa <__LOCK_REGION_LENGTH__+0x2fa>
 6f8:	b8 cf       	rjmp	.-144    	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 6fa:	ae cf       	rjmp	.-164    	; 0x658 <__LOCK_REGION_LENGTH__+0x258>
 6fc:	eb 81       	ldd	r30, Y+3	; 0x03
 6fe:	fc 81       	ldd	r31, Y+4	; 0x04
 700:	00 81       	ld	r16, Z
 702:	11 81       	ldd	r17, Z+1	; 0x01
 704:	f8 01       	movw	r30, r16
 706:	24 81       	ldd	r18, Z+4	; 0x04
 708:	21 11       	cpse	r18, r1
 70a:	d4 cf       	rjmp	.-88     	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 70c:	ed 90       	ld	r14, X+
 70e:	fc 90       	ld	r15, X
 710:	11 97       	sbiw	r26, 0x01	; 1
 712:	60 e0       	ldi	r22, 0x00	; 0
 714:	70 e0       	ldi	r23, 0x00	; 0
 716:	40 e0       	ldi	r20, 0x00	; 0
 718:	50 e0       	ldi	r21, 0x00	; 0
 71a:	4e 15       	cp	r20, r14
 71c:	5f 05       	cpc	r21, r15
 71e:	09 f1       	breq	.+66     	; 0x762 <__LOCK_REGION_LENGTH__+0x362>
 720:	eb 81       	ldd	r30, Y+3	; 0x03
 722:	fc 81       	ldd	r31, Y+4	; 0x04
 724:	84 80       	ldd	r8, Z+4	; 0x04
 726:	95 80       	ldd	r9, Z+5	; 0x05
 728:	86 0e       	add	r8, r22
 72a:	97 1e       	adc	r9, r23
 72c:	f4 01       	movw	r30, r8
 72e:	20 81       	ld	r18, Z
 730:	23 30       	cpi	r18, 0x03	; 3
 732:	11 f0       	breq	.+4      	; 0x738 <__LOCK_REGION_LENGTH__+0x338>
 734:	28 30       	cpi	r18, 0x08	; 8
 736:	81 f4       	brne	.+32     	; 0x758 <__LOCK_REGION_LENGTH__+0x358>
 738:	f4 01       	movw	r30, r8
 73a:	24 81       	ldd	r18, Z+4	; 0x04
 73c:	35 81       	ldd	r19, Z+5	; 0x05
 73e:	c2 80       	ldd	r12, Z+2	; 0x02
 740:	d3 80       	ldd	r13, Z+3	; 0x03
 742:	f6 01       	movw	r30, r12
 744:	c1 80       	ldd	r12, Z+1	; 0x01
 746:	d2 80       	ldd	r13, Z+2	; 0x02
 748:	2c 15       	cp	r18, r12
 74a:	3d 05       	cpc	r19, r13
 74c:	28 f4       	brcc	.+10     	; 0x758 <__LOCK_REGION_LENGTH__+0x358>
 74e:	2f 5f       	subi	r18, 0xFF	; 255
 750:	3f 4f       	sbci	r19, 0xFF	; 255
 752:	f4 01       	movw	r30, r8
 754:	24 83       	std	Z+4, r18	; 0x04
 756:	35 83       	std	Z+5, r19	; 0x05
 758:	4f 5f       	subi	r20, 0xFF	; 255
 75a:	5f 4f       	sbci	r21, 0xFF	; 255
 75c:	6a 5f       	subi	r22, 0xFA	; 250
 75e:	7f 4f       	sbci	r23, 0xFF	; 255
 760:	dc cf       	rjmp	.-72     	; 0x71a <__LOCK_REGION_LENGTH__+0x31a>
 762:	fd 01       	movw	r30, r26
 764:	26 81       	ldd	r18, Z+6	; 0x06
 766:	f8 01       	movw	r30, r16
 768:	24 83       	std	Z+4, r18	; 0x04
 76a:	a4 cf       	rjmp	.-184    	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 76c:	eb 81       	ldd	r30, Y+3	; 0x03
 76e:	fc 81       	ldd	r31, Y+4	; 0x04
 770:	00 81       	ld	r16, Z
 772:	11 81       	ldd	r17, Z+1	; 0x01
 774:	f8 01       	movw	r30, r16
 776:	25 81       	ldd	r18, Z+5	; 0x05
 778:	21 11       	cpse	r18, r1
 77a:	a4 cf       	rjmp	.-184    	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
 77c:	ed 90       	ld	r14, X+
 77e:	fc 90       	ld	r15, X
 780:	11 97       	sbiw	r26, 0x01	; 1
 782:	60 e0       	ldi	r22, 0x00	; 0
 784:	70 e0       	ldi	r23, 0x00	; 0
 786:	40 e0       	ldi	r20, 0x00	; 0
 788:	50 e0       	ldi	r21, 0x00	; 0
 78a:	4e 15       	cp	r20, r14
 78c:	5f 05       	cpc	r21, r15
 78e:	09 f1       	breq	.+66     	; 0x7d2 <__LOCK_REGION_LENGTH__+0x3d2>
 790:	eb 81       	ldd	r30, Y+3	; 0x03
 792:	fc 81       	ldd	r31, Y+4	; 0x04
 794:	84 80       	ldd	r8, Z+4	; 0x04
 796:	95 80       	ldd	r9, Z+5	; 0x05
 798:	86 0e       	add	r8, r22
 79a:	97 1e       	adc	r9, r23
 79c:	f4 01       	movw	r30, r8
 79e:	20 81       	ld	r18, Z
 7a0:	23 30       	cpi	r18, 0x03	; 3
 7a2:	11 f0       	breq	.+4      	; 0x7a8 <__LOCK_REGION_LENGTH__+0x3a8>
 7a4:	28 30       	cpi	r18, 0x08	; 8
 7a6:	81 f4       	brne	.+32     	; 0x7c8 <__LOCK_REGION_LENGTH__+0x3c8>
 7a8:	f4 01       	movw	r30, r8
 7aa:	24 81       	ldd	r18, Z+4	; 0x04
 7ac:	35 81       	ldd	r19, Z+5	; 0x05
 7ae:	c2 80       	ldd	r12, Z+2	; 0x02
 7b0:	d3 80       	ldd	r13, Z+3	; 0x03
 7b2:	f6 01       	movw	r30, r12
 7b4:	c1 80       	ldd	r12, Z+1	; 0x01
 7b6:	d2 80       	ldd	r13, Z+2	; 0x02
 7b8:	c2 16       	cp	r12, r18
 7ba:	d3 06       	cpc	r13, r19
 7bc:	28 f4       	brcc	.+10     	; 0x7c8 <__LOCK_REGION_LENGTH__+0x3c8>
 7be:	21 50       	subi	r18, 0x01	; 1
 7c0:	31 09       	sbc	r19, r1
 7c2:	f4 01       	movw	r30, r8
 7c4:	24 83       	std	Z+4, r18	; 0x04
 7c6:	35 83       	std	Z+5, r19	; 0x05
 7c8:	4f 5f       	subi	r20, 0xFF	; 255
 7ca:	5f 4f       	sbci	r21, 0xFF	; 255
 7cc:	6a 5f       	subi	r22, 0xFA	; 250
 7ce:	7f 4f       	sbci	r23, 0xFF	; 255
 7d0:	dc cf       	rjmp	.-72     	; 0x78a <__LOCK_REGION_LENGTH__+0x38a>
 7d2:	fd 01       	movw	r30, r26
 7d4:	27 81       	ldd	r18, Z+7	; 0x07
 7d6:	f8 01       	movw	r30, r16
 7d8:	25 83       	std	Z+5, r18	; 0x05
 7da:	74 cf       	rjmp	.-280    	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
 7dc:	21 50       	subi	r18, 0x01	; 1
 7de:	23 83       	std	Z+3, r18	; 0x03
 7e0:	71 cf       	rjmp	.-286    	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
 7e2:	a9 01       	movw	r20, r18
 7e4:	44 0f       	add	r20, r20
 7e6:	55 1f       	adc	r21, r21
 7e8:	eb 81       	ldd	r30, Y+3	; 0x03
 7ea:	fc 81       	ldd	r31, Y+4	; 0x04
 7ec:	64 81       	ldd	r22, Z+4	; 0x04
 7ee:	75 81       	ldd	r23, Z+5	; 0x05
 7f0:	fb 01       	movw	r30, r22
 7f2:	e4 0f       	add	r30, r20
 7f4:	f5 1f       	adc	r31, r21
 7f6:	60 81       	ld	r22, Z
 7f8:	65 38       	cpi	r22, 0x85	; 133
 7fa:	09 f0       	breq	.+2      	; 0x7fe <__LOCK_REGION_LENGTH__+0x3fe>
 7fc:	56 c0       	rjmp	.+172    	; 0x8aa <__LOCK_REGION_LENGTH__+0x4aa>
 7fe:	61 81       	ldd	r22, Z+1	; 0x01
 800:	66 23       	and	r22, r22
 802:	19 f0       	breq	.+6      	; 0x80a <__LOCK_REGION_LENGTH__+0x40a>
 804:	61 50       	subi	r22, 0x01	; 1
 806:	61 83       	std	Z+1, r22	; 0x01
 808:	50 c0       	rjmp	.+160    	; 0x8aa <__LOCK_REGION_LENGTH__+0x4aa>
 80a:	a0 82       	st	Z, r10
 80c:	eb 81       	ldd	r30, Y+3	; 0x03
 80e:	fc 81       	ldd	r31, Y+4	; 0x04
 810:	64 81       	ldd	r22, Z+4	; 0x04
 812:	75 81       	ldd	r23, Z+5	; 0x05
 814:	fb 01       	movw	r30, r22
 816:	e4 0f       	add	r30, r20
 818:	f5 1f       	adc	r31, r21
 81a:	02 80       	ldd	r0, Z+2	; 0x02
 81c:	f3 81       	ldd	r31, Z+3	; 0x03
 81e:	e0 2d       	mov	r30, r0
 820:	b0 82       	st	Z, r11
 822:	eb 81       	ldd	r30, Y+3	; 0x03
 824:	fc 81       	ldd	r31, Y+4	; 0x04
 826:	46 81       	ldd	r20, Z+6	; 0x06
 828:	57 81       	ldd	r21, Z+7	; 0x07
 82a:	fa 01       	movw	r30, r20
 82c:	e2 0f       	add	r30, r18
 82e:	f3 1f       	adc	r31, r19
 830:	d2 80       	ldd	r13, Z+2	; 0x02
 832:	dd 20       	and	r13, r13
 834:	d1 f1       	breq	.+116    	; 0x8aa <__LOCK_REGION_LENGTH__+0x4aa>
 836:	40 e0       	ldi	r20, 0x00	; 0
 838:	50 e0       	ldi	r21, 0x00	; 0
 83a:	00 e0       	ldi	r16, 0x00	; 0
 83c:	10 e0       	ldi	r17, 0x00	; 0
 83e:	eb 81       	ldd	r30, Y+3	; 0x03
 840:	fc 81       	ldd	r31, Y+4	; 0x04
 842:	62 81       	ldd	r22, Z+2	; 0x02
 844:	73 81       	ldd	r23, Z+3	; 0x03
 846:	fb 01       	movw	r30, r22
 848:	60 81       	ld	r22, Z
 84a:	71 81       	ldd	r23, Z+1	; 0x01
 84c:	06 17       	cp	r16, r22
 84e:	17 07       	cpc	r17, r23
 850:	60 f5       	brcc	.+88     	; 0x8aa <__LOCK_REGION_LENGTH__+0x4aa>
 852:	eb 81       	ldd	r30, Y+3	; 0x03
 854:	fc 81       	ldd	r31, Y+4	; 0x04
 856:	66 81       	ldd	r22, Z+6	; 0x06
 858:	77 81       	ldd	r23, Z+7	; 0x07
 85a:	fb 01       	movw	r30, r22
 85c:	e4 0f       	add	r30, r20
 85e:	f5 1f       	adc	r31, r21
 860:	62 81       	ldd	r22, Z+2	; 0x02
 862:	d6 12       	cpse	r13, r22
 864:	1d c0       	rjmp	.+58     	; 0x8a0 <__LOCK_REGION_LENGTH__+0x4a0>
 866:	ba 01       	movw	r22, r20
 868:	66 0f       	add	r22, r22
 86a:	77 1f       	adc	r23, r23
 86c:	eb 81       	ldd	r30, Y+3	; 0x03
 86e:	fc 81       	ldd	r31, Y+4	; 0x04
 870:	84 80       	ldd	r8, Z+4	; 0x04
 872:	95 80       	ldd	r9, Z+5	; 0x05
 874:	86 0e       	add	r8, r22
 876:	97 1e       	adc	r9, r23
 878:	f4 01       	movw	r30, r8
 87a:	e2 80       	ldd	r14, Z+2	; 0x02
 87c:	f3 80       	ldd	r15, Z+3	; 0x03
 87e:	f7 01       	movw	r30, r14
 880:	f0 80       	ld	r15, Z
 882:	f0 fe       	sbrs	r15, 0
 884:	0d c0       	rjmp	.+26     	; 0x8a0 <__LOCK_REGION_LENGTH__+0x4a0>
 886:	f4 01       	movw	r30, r8
 888:	a0 82       	st	Z, r10
 88a:	eb 81       	ldd	r30, Y+3	; 0x03
 88c:	fc 81       	ldd	r31, Y+4	; 0x04
 88e:	e4 80       	ldd	r14, Z+4	; 0x04
 890:	f5 80       	ldd	r15, Z+5	; 0x05
 892:	f7 01       	movw	r30, r14
 894:	e6 0f       	add	r30, r22
 896:	f7 1f       	adc	r31, r23
 898:	02 80       	ldd	r0, Z+2	; 0x02
 89a:	f3 81       	ldd	r31, Z+3	; 0x03
 89c:	e0 2d       	mov	r30, r0
 89e:	b0 82       	st	Z, r11
 8a0:	0f 5f       	subi	r16, 0xFF	; 255
 8a2:	1f 4f       	sbci	r17, 0xFF	; 255
 8a4:	4d 5f       	subi	r20, 0xFD	; 253
 8a6:	5f 4f       	sbci	r21, 0xFF	; 255
 8a8:	ca cf       	rjmp	.-108    	; 0x83e <__LOCK_REGION_LENGTH__+0x43e>
 8aa:	11 96       	adiw	r26, 0x01	; 1
 8ac:	2d 5f       	subi	r18, 0xFD	; 253
 8ae:	3f 4f       	sbci	r19, 0xFF	; 255
 8b0:	15 cf       	rjmp	.-470    	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
 8b2:	8b e0       	ldi	r24, 0x0B	; 11
 8b4:	24 96       	adiw	r28, 0x04	; 4
 8b6:	e2 e1       	ldi	r30, 0x12	; 18
 8b8:	b1 c5       	rjmp	.+2914   	; 0x141c <__epilogue_restores__>

Disassembly of section .text.qtm_init_sensor_key:

00001342 <qtm_init_sensor_key>:
    1342:	cf 93       	push	r28
    1344:	df 93       	push	r29
    1346:	00 97       	sbiw	r24, 0x00	; 0
    1348:	b9 f0       	breq	.+46     	; 0x1378 <qtm_init_sensor_key+0x36>
    134a:	41 15       	cp	r20, r1
    134c:	51 05       	cpc	r21, r1
    134e:	a1 f0       	breq	.+40     	; 0x1378 <qtm_init_sensor_key+0x36>
    1350:	26 e0       	ldi	r18, 0x06	; 6
    1352:	62 9f       	mul	r22, r18
    1354:	b0 01       	movw	r22, r0
    1356:	11 24       	eor	r1, r1
    1358:	ec 01       	movw	r28, r24
    135a:	ec 81       	ldd	r30, Y+4	; 0x04
    135c:	fd 81       	ldd	r31, Y+5	; 0x05
    135e:	e6 0f       	add	r30, r22
    1360:	f7 1f       	adc	r31, r23
    1362:	21 e0       	ldi	r18, 0x01	; 1
    1364:	20 83       	st	Z, r18
    1366:	8c 81       	ldd	r24, Y+4	; 0x04
    1368:	9d 81       	ldd	r25, Y+5	; 0x05
    136a:	fc 01       	movw	r30, r24
    136c:	e6 0f       	add	r30, r22
    136e:	f7 1f       	adc	r31, r23
    1370:	42 83       	std	Z+2, r20	; 0x02
    1372:	53 83       	std	Z+3, r21	; 0x03
    1374:	80 e0       	ldi	r24, 0x00	; 0
    1376:	01 c0       	rjmp	.+2      	; 0x137a <qtm_init_sensor_key+0x38>
    1378:	8b e0       	ldi	r24, 0x0B	; 11
    137a:	df 91       	pop	r29
    137c:	cf 91       	pop	r28
    137e:	08 95       	ret

Disassembly of section .text.qtm_update_qtlib_timer:

00001526 <qtm_update_qtlib_timer>:
    1526:	20 91 79 3e 	lds	r18, 0x3E79	; 0x803e79 <qtm_local_ms_timecount>
    152a:	30 91 7a 3e 	lds	r19, 0x3E7A	; 0x803e7a <qtm_local_ms_timecount+0x1>
    152e:	82 0f       	add	r24, r18
    1530:	93 1f       	adc	r25, r19
    1532:	80 93 79 3e 	sts	0x3E79, r24	; 0x803e79 <qtm_local_ms_timecount>
    1536:	90 93 7a 3e 	sts	0x3E7A, r25	; 0x803e7a <qtm_local_ms_timecount+0x1>
    153a:	08 95       	ret

Disassembly of section .text.libgcc.prologue:

000013ea <__prologue_saves__>:
    13ea:	2f 92       	push	r2
    13ec:	3f 92       	push	r3
    13ee:	4f 92       	push	r4
    13f0:	5f 92       	push	r5
    13f2:	6f 92       	push	r6
    13f4:	7f 92       	push	r7
    13f6:	8f 92       	push	r8
    13f8:	9f 92       	push	r9
    13fa:	af 92       	push	r10
    13fc:	bf 92       	push	r11
    13fe:	cf 92       	push	r12
    1400:	df 92       	push	r13
    1402:	ef 92       	push	r14
    1404:	ff 92       	push	r15
    1406:	0f 93       	push	r16
    1408:	1f 93       	push	r17
    140a:	cf 93       	push	r28
    140c:	df 93       	push	r29
    140e:	cd b7       	in	r28, 0x3d	; 61
    1410:	de b7       	in	r29, 0x3e	; 62
    1412:	ca 1b       	sub	r28, r26
    1414:	db 0b       	sbc	r29, r27
    1416:	cd bf       	out	0x3d, r28	; 61
    1418:	de bf       	out	0x3e, r29	; 62
    141a:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

0000141c <__epilogue_restores__>:
    141c:	2a 88       	ldd	r2, Y+18	; 0x12
    141e:	39 88       	ldd	r3, Y+17	; 0x11
    1420:	48 88       	ldd	r4, Y+16	; 0x10
    1422:	5f 84       	ldd	r5, Y+15	; 0x0f
    1424:	6e 84       	ldd	r6, Y+14	; 0x0e
    1426:	7d 84       	ldd	r7, Y+13	; 0x0d
    1428:	8c 84       	ldd	r8, Y+12	; 0x0c
    142a:	9b 84       	ldd	r9, Y+11	; 0x0b
    142c:	aa 84       	ldd	r10, Y+10	; 0x0a
    142e:	b9 84       	ldd	r11, Y+9	; 0x09
    1430:	c8 84       	ldd	r12, Y+8	; 0x08
    1432:	df 80       	ldd	r13, Y+7	; 0x07
    1434:	ee 80       	ldd	r14, Y+6	; 0x06
    1436:	fd 80       	ldd	r15, Y+5	; 0x05
    1438:	0c 81       	ldd	r16, Y+4	; 0x04
    143a:	1b 81       	ldd	r17, Y+3	; 0x03
    143c:	aa 81       	ldd	r26, Y+2	; 0x02
    143e:	b9 81       	ldd	r27, Y+1	; 0x01
    1440:	ce 0f       	add	r28, r30
    1442:	d1 1d       	adc	r29, r1
    1444:	cd bf       	out	0x3d, r28	; 61
    1446:	de bf       	out	0x3e, r29	; 62
    1448:	ed 01       	movw	r28, r26
    144a:	08 95       	ret
